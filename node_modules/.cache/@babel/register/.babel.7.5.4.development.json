{
  "{\"sourceRoot\":\"D:\\\\Property-Pro-Lite1\\\\server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Property-Pro-Lite1\",\"filename\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Property-Pro-Lite1\",\"plugins\":[],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Property-Pro-Lite1\\server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Property-Pro-Lite1",
      "filename": "D:\\Property-Pro-Lite1\\server\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Property-Pro-Lite1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Property-Pro-Lite1\\server\\server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "D:\\Property-Pro-Lite1\\server\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Property-Pro-Lite1\\server",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\nimport router from './routes/routes';\nconst app = express();\napp.use(express.json());\napp.use(router);\napp.get('/', (req, res) => res.status(200).send({\n  status: 'success',\n  data: 'Property Pro Lite website, Thanks to visit Us!'\n}));\napp.all('*', (req, res) => {\n  res.status(404).send('Error 404, route/url not found');\n}); // serve is running on this port 3000 and set environment for hosting company\n\nconst server = app.listen(process.env.PORT || 3000, () => {\n  console.log('Property-Pro-Lite1 server running on port: ', server.address().port);\n});\nexport default app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicm91dGVyIiwiYXBwIiwidXNlIiwianNvbiIsImdldCIsInJlcSIsInJlcyIsInN0YXR1cyIsInNlbmQiLCJkYXRhIiwiYWxsIiwic2VydmVyIiwibGlzdGVuIiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJjb25zb2xlIiwibG9nIiwiYWRkcmVzcyIsInBvcnQiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLE9BQVAsTUFBb0IsU0FBcEI7QUFDQSxPQUFPQyxNQUFQLE1BQW1CLGlCQUFuQjtBQUVBLE1BQU1DLEdBQUcsR0FBR0YsT0FBTyxFQUFuQjtBQUVBRSxHQUFHLENBQUNDLEdBQUosQ0FBUUgsT0FBTyxDQUFDSSxJQUFSLEVBQVI7QUFDQUYsR0FBRyxDQUFDQyxHQUFKLENBQVFGLE1BQVI7QUFFQUMsR0FBRyxDQUFDRyxHQUFKLENBQVEsR0FBUixFQUFhLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFjQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUM5Q0QsRUFBQUEsTUFBTSxFQUFFLFNBRHNDO0FBRTlDRSxFQUFBQSxJQUFJLEVBQUU7QUFGd0MsQ0FBckIsQ0FBM0I7QUFLQVIsR0FBRyxDQUFDUyxHQUFKLENBQVEsR0FBUixFQUFhLENBQUNMLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ3pCQSxFQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQixnQ0FBckI7QUFDRCxDQUZELEUsQ0FJQTs7QUFDQSxNQUFNRyxNQUFNLEdBQUdWLEdBQUcsQ0FBQ1csTUFBSixDQUFXQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUEvQixFQUFxQyxNQUFNO0FBRXhEQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSw2Q0FBWixFQUEyRE4sTUFBTSxDQUFDTyxPQUFQLEdBQWlCQyxJQUE1RTtBQUNELENBSGMsQ0FBZjtBQUtBLGVBQWVsQixHQUFmIiwic291cmNlUm9vdCI6IkQ6XFxQcm9wZXJ0eS1Qcm8tTGl0ZTFcXHNlcnZlciIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgcm91dGVyIGZyb20gJy4vcm91dGVzL3JvdXRlcyc7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcclxuYXBwLnVzZShyb3V0ZXIpO1xyXG5cclxuYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4gcmVzLnN0YXR1cygyMDApLnNlbmQoe1xyXG4gIHN0YXR1czogJ3N1Y2Nlc3MnLFxyXG4gIGRhdGE6ICdQcm9wZXJ0eSBQcm8gTGl0ZSB3ZWJzaXRlLCBUaGFua3MgdG8gdmlzaXQgVXMhJ1xyXG59KSk7XHJcblxyXG5hcHAuYWxsKCcqJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgcmVzLnN0YXR1cyg0MDQpLnNlbmQoJ0Vycm9yIDQwNCwgcm91dGUvdXJsIG5vdCBmb3VuZCcpO1xyXG59KTtcclxuXHJcbi8vIHNlcnZlIGlzIHJ1bm5pbmcgb24gdGhpcyBwb3J0IDMwMDAgYW5kIHNldCBlbnZpcm9ubWVudCBmb3IgaG9zdGluZyBjb21wYW55XHJcbmNvbnN0IHNlcnZlciA9IGFwcC5saXN0ZW4ocHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwLCAoKSA9PiB7XHJcblxyXG4gIGNvbnNvbGUubG9nKCdQcm9wZXJ0eS1Qcm8tTGl0ZTEgc2VydmVyIHJ1bm5pbmcgb24gcG9ydDogJywgc2VydmVyLmFkZHJlc3MoKS5wb3J0KTtcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhcHA7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "router",
        "app",
        "use",
        "json",
        "get",
        "req",
        "res",
        "status",
        "send",
        "data",
        "all",
        "server",
        "listen",
        "process",
        "env",
        "PORT",
        "console",
        "log",
        "address",
        "port"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,GAAG,GAAGF,OAAO,EAAnB;AAEAE,GAAG,CAACC,GAAJ,CAAQH,OAAO,CAACI,IAAR,EAAR;AACAF,GAAG,CAACC,GAAJ,CAAQF,MAAR;AAEAC,GAAG,CAACG,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC9CD,EAAAA,MAAM,EAAE,SADsC;AAE9CE,EAAAA,IAAI,EAAE;AAFwC,CAArB,CAA3B;AAKAR,GAAG,CAACS,GAAJ,CAAQ,GAAR,EAAa,CAACL,GAAD,EAAMC,GAAN,KAAc;AACzBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gCAArB;AACD,CAFD,E,CAIA;;AACA,MAAMG,MAAM,GAAGV,GAAG,CAACW,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAA/B,EAAqC,MAAM;AAExDC,EAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ,EAA2DN,MAAM,CAACO,OAAP,GAAiBC,IAA5E;AACD,CAHc,CAAf;AAKA,eAAelB,GAAf",
      "sourceRoot": "D:\\Property-Pro-Lite1\\server",
      "sourcesContent": [
        "import express from 'express';\r\nimport router from './routes/routes';\r\n\r\nconst app = express();\r\n\r\napp.use(express.json());\r\napp.use(router);\r\n\r\napp.get('/', (req, res) => res.status(200).send({\r\n  status: 'success',\r\n  data: 'Property Pro Lite website, Thanks to visit Us!'\r\n}));\r\n\r\napp.all('*', (req, res) => {\r\n  res.status(404).send('Error 404, route/url not found');\r\n});\r\n\r\n// serve is running on this port 3000 and set environment for hosting company\r\nconst server = app.listen(process.env.PORT || 3000, () => {\r\n\r\n  console.log('Property-Pro-Lite1 server running on port: ', server.address().port);\r\n});\r\n\r\nexport default app;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1562964625186
  },
  "{\"sourceRoot\":\"D:\\\\Property-Pro-Lite1\\\\server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Property-Pro-Lite1\",\"filename\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Property-Pro-Lite1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Property-Pro-Lite1\\server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Property-Pro-Lite1",
      "filename": "D:\\Property-Pro-Lite1\\server\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Property-Pro-Lite1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Property-Pro-Lite1\\server\\server.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Property-Pro-Lite1\\server\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Property-Pro-Lite1\\server",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes/routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nrequire('dotenv').config();\n\nvar app = (0, _express[\"default\"])();\napp.use(_express[\"default\"].json());\napp.use(_express[\"default\"].urlencoded({\n  extended: false\n}));\napp.use('/api/v1', _routes[\"default\"]);\napp.listen(3000, function () {\n  return console.log(\"Server started on port 3000...\");\n});\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwiYXBwIiwidXNlIiwiZXhwcmVzcyIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJyb3V0ZXIiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQUEsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkMsTUFBbEI7O0FBRUEsSUFBTUMsR0FBRyxHQUFHLDBCQUFaO0FBRUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyxvQkFBUUMsSUFBUixFQUFSO0FBQ0FILEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyxvQkFBUUUsVUFBUixDQUFtQjtBQUFDQyxFQUFBQSxRQUFRLEVBQUU7QUFBWCxDQUFuQixDQUFSO0FBRUFMLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFNBQVIsRUFBbUJLLGtCQUFuQjtBQUdBTixHQUFHLENBQUNPLE1BQUosQ0FBVyxJQUFYLEVBQWlCO0FBQUEsU0FBTUMsT0FBTyxDQUFDQyxHQUFSLGtDQUFOO0FBQUEsQ0FBakI7ZUFFZVQsRyIsInNvdXJjZVJvb3QiOiJEOlxcUHJvcGVydHktUHJvLUxpdGUxXFxzZXJ2ZXIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcclxuaW1wb3J0IHJvdXRlciBmcm9tICcuL3JvdXRlcy9yb3V0ZXMnO1xyXG5cclxucmVxdWlyZSgnZG90ZW52JykuY29uZmlnKCk7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKClcclxuXHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpXHJcbmFwcC51c2UoZXhwcmVzcy51cmxlbmNvZGVkKHtleHRlbmRlZDogZmFsc2V9KSlcclxuXHJcbmFwcC51c2UoJy9hcGkvdjEnLCByb3V0ZXIpXHJcblxyXG5cclxuYXBwLmxpc3RlbigzMDAwLCAoKSA9PiBjb25zb2xlLmxvZyhgU2VydmVyIHN0YXJ0ZWQgb24gcG9ydCAzMDAwLi4uYCkpXHJcblxyXG5leHBvcnQgZGVmYXVsdCBhcHA7Il19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "require",
        "config",
        "app",
        "use",
        "express",
        "json",
        "urlencoded",
        "extended",
        "router",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,IAAMC,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,oBAAQE,UAAR,CAAmB;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAnB,CAAR;AAEAL,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBK,kBAAnB;AAGAN,GAAG,CAACO,MAAJ,CAAW,IAAX,EAAiB;AAAA,SAAMC,OAAO,CAACC,GAAR,kCAAN;AAAA,CAAjB;eAEeT,G",
      "sourceRoot": "D:\\Property-Pro-Lite1\\server",
      "sourcesContent": [
        "import express from 'express';\r\nimport router from './routes/routes';\r\n\r\nrequire('dotenv').config();\r\n\r\nconst app = express()\r\n\r\napp.use(express.json())\r\napp.use(express.urlencoded({extended: false}))\r\n\r\napp.use('/api/v1', router)\r\n\r\n\r\napp.listen(3000, () => console.log(`Server started on port 3000...`))\r\n\r\nexport default app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1562969413496
  },
  "{\"sourceRoot\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Property-Pro-Lite1\",\"filename\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\routes\\\\routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Property-Pro-Lite1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Property-Pro-Lite1",
      "filename": "D:\\Property-Pro-Lite1\\server\\routes\\routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Property-Pro-Lite1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Property-Pro-Lite1\\server\\routes\\routes.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Property-Pro-Lite1\\server\\routes\\routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Property-Pro-Lite1\\server\\routes",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _validator = _interopRequireDefault(require(\"../helpers/validator\"));\n\nvar _propertiesController = _interopRequireDefault(require(\"../controllers/propertiesController\"));\n\nvar _usersController = _interopRequireDefault(require(\"../controllers/usersController\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar postValidate = _validator[\"default\"].postValidate,\n    userSignUpValidate = _validator[\"default\"].userSignUpValidate,\n    userSignInValidate = _validator[\"default\"].userSignInValidate;\nvar userSignUp = _usersController[\"default\"].userSignUp,\n    userSignIn = _usersController[\"default\"].userSignIn;\nvar getAllProperties = _propertiesController[\"default\"].getAllProperties,\n    getPropertiesByType = _propertiesController[\"default\"].getPropertiesByType,\n    getProperty = _propertiesController[\"default\"].getProperty,\n    postProperty = _propertiesController[\"default\"].postProperty,\n    putProperty = _propertiesController[\"default\"].putProperty,\n    deleteProperty = _propertiesController[\"default\"].deleteProperty;\n\nvar router = _express[\"default\"].Router();\n/*create account for user*/\n\n\nrouter.post('/auth/signup', userSignUpValidate, userSignUp);\n/*login route*/\n\nrouter.post('/auth/signin', userSignInValidate, userSignIn);\n/*search all properties*/\n\nrouter.get('/properties', getAllProperties);\n/*search one property*/\n\nrouter.get('/property/:id', getProperty);\n/* create a new property*/\n\nrouter.post('/property', postValidate, postProperty);\n/*update a property*/\n\nrouter.patch('/property/:id', putProperty);\n/*delete a property*/\n\nrouter[\"delete\"]('/property/:id', deleteProperty);\n/*search all properties by type*/\n\nrouter.get('/property', getPropertiesByType);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5qcyJdLCJuYW1lcyI6WyJwb3N0VmFsaWRhdGUiLCJ2YWxpZGF0ZSIsInVzZXJTaWduVXBWYWxpZGF0ZSIsInVzZXJTaWduSW5WYWxpZGF0ZSIsInVzZXJTaWduVXAiLCJ1c2VycyIsInVzZXJTaWduSW4iLCJnZXRBbGxQcm9wZXJ0aWVzIiwicHJvcGVydGllcyIsImdldFByb3BlcnRpZXNCeVR5cGUiLCJnZXRQcm9wZXJ0eSIsInBvc3RQcm9wZXJ0eSIsInB1dFByb3BlcnR5IiwiZGVsZXRlUHJvcGVydHkiLCJyb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwicG9zdCIsImdldCIsInBhdGNoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7SUFFUUEsWSxHQUV1QkMscUIsQ0FGdkJELFk7SUFDQUUsa0IsR0FDdUJELHFCLENBRHZCQyxrQjtJQUNBQyxrQixHQUF1QkYscUIsQ0FBdkJFLGtCO0lBQ0FDLFUsR0FDZUMsMkIsQ0FEZkQsVTtJQUNBRSxVLEdBQWVELDJCLENBQWZDLFU7SUFDREMsZ0IsR0FNSEMsZ0MsQ0FOR0QsZ0I7SUFDQUUsbUIsR0FLSEQsZ0MsQ0FMR0MsbUI7SUFDQUMsVyxHQUlIRixnQyxDQUpHRSxXO0lBQ0FDLFksR0FHSEgsZ0MsQ0FIR0csWTtJQUNBQyxXLEdBRUhKLGdDLENBRkdJLFc7SUFDQUMsYyxHQUNITCxnQyxDQURHSyxjOztBQUdQLElBQU1DLE1BQU0sR0FBR0Msb0JBQVFDLE1BQVIsRUFBZjtBQUdBOzs7QUFDQUYsTUFBTSxDQUFDRyxJQUFQLENBQVksY0FBWixFQUE0QmYsa0JBQTVCLEVBQWdERSxVQUFoRDtBQUVBOztBQUNBVSxNQUFNLENBQUNHLElBQVAsQ0FBWSxjQUFaLEVBQTRCZCxrQkFBNUIsRUFBZ0RHLFVBQWhEO0FBRUE7O0FBQ0FRLE1BQU0sQ0FBQ0ksR0FBUCxDQUFXLGFBQVgsRUFBMEJYLGdCQUExQjtBQUVBOztBQUNBTyxNQUFNLENBQUNJLEdBQVAsQ0FBVyxlQUFYLEVBQTRCUixXQUE1QjtBQUVBOztBQUNBSSxNQUFNLENBQUNHLElBQVAsQ0FBWSxXQUFaLEVBQXlCakIsWUFBekIsRUFBdUNXLFlBQXZDO0FBRUE7O0FBQ0FHLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhLGVBQWIsRUFBOEJQLFdBQTlCO0FBRUE7O0FBQ0FFLE1BQU0sVUFBTixDQUFjLGVBQWQsRUFBK0JELGNBQS9CO0FBRUE7O0FBQ0FDLE1BQU0sQ0FBQ0ksR0FBUCxDQUFXLFdBQVgsRUFBd0JULG1CQUF4QjtlQUdlSyxNIiwic291cmNlUm9vdCI6IkQ6XFxQcm9wZXJ0eS1Qcm8tTGl0ZTFcXHNlcnZlclxccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCB2YWxpZGF0ZSBmcm9tICcuLi9oZWxwZXJzL3ZhbGlkYXRvcic7XHJcbmltcG9ydCBwcm9wZXJ0aWVzIGZyb20gJy4uL2NvbnRyb2xsZXJzL3Byb3BlcnRpZXNDb250cm9sbGVyJ1xyXG5pbXBvcnQgdXNlcnMgZnJvbSAnLi4vY29udHJvbGxlcnMvdXNlcnNDb250cm9sbGVyJztcclxuXHJcbmNvbnN0IHsgcG9zdFZhbGlkYXRlLCBcclxuICAgICAgICB1c2VyU2lnblVwVmFsaWRhdGUsIFxyXG4gICAgICAgIHVzZXJTaWduSW5WYWxpZGF0ZSB9ID0gdmFsaWRhdGU7XHJcbmNvbnN0IHsgdXNlclNpZ25VcCwgXHJcbiAgICAgICAgdXNlclNpZ25JbiB9ID0gdXNlcnM7XHJcbmNvbnN0IHtnZXRBbGxQcm9wZXJ0aWVzLCBcclxuICAgICAgIGdldFByb3BlcnRpZXNCeVR5cGUsIFxyXG4gICAgICAgZ2V0UHJvcGVydHksIFxyXG4gICAgICAgcG9zdFByb3BlcnR5LCBcclxuICAgICAgIHB1dFByb3BlcnR5LCBcclxuICAgICAgIGRlbGV0ZVByb3BlcnR5XHJcbn0gPSBwcm9wZXJ0aWVzO1xyXG5cclxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuXHJcblxyXG4vKmNyZWF0ZSBhY2NvdW50IGZvciB1c2VyKi9cclxucm91dGVyLnBvc3QoJy9hdXRoL3NpZ251cCcsIHVzZXJTaWduVXBWYWxpZGF0ZSwgdXNlclNpZ25VcCk7XHJcblxyXG4vKmxvZ2luIHJvdXRlKi9cclxucm91dGVyLnBvc3QoJy9hdXRoL3NpZ25pbicsIHVzZXJTaWduSW5WYWxpZGF0ZSwgdXNlclNpZ25Jbik7XHJcblxyXG4vKnNlYXJjaCBhbGwgcHJvcGVydGllcyovXHJcbnJvdXRlci5nZXQoJy9wcm9wZXJ0aWVzJywgZ2V0QWxsUHJvcGVydGllcyk7XHJcblxyXG4vKnNlYXJjaCBvbmUgcHJvcGVydHkqL1xyXG5yb3V0ZXIuZ2V0KCcvcHJvcGVydHkvOmlkJywgZ2V0UHJvcGVydHkpO1xyXG5cclxuLyogY3JlYXRlIGEgbmV3IHByb3BlcnR5Ki9cclxucm91dGVyLnBvc3QoJy9wcm9wZXJ0eScsIHBvc3RWYWxpZGF0ZSwgcG9zdFByb3BlcnR5KTtcclxuXHJcbi8qdXBkYXRlIGEgcHJvcGVydHkqL1xyXG5yb3V0ZXIucGF0Y2goJy9wcm9wZXJ0eS86aWQnLCBwdXRQcm9wZXJ0eSk7XHJcblxyXG4vKmRlbGV0ZSBhIHByb3BlcnR5Ki9cclxucm91dGVyLmRlbGV0ZSgnL3Byb3BlcnR5LzppZCcsIGRlbGV0ZVByb3BlcnR5KTtcclxuXHJcbi8qc2VhcmNoIGFsbCBwcm9wZXJ0aWVzIGJ5IHR5cGUqL1xyXG5yb3V0ZXIuZ2V0KCcvcHJvcGVydHknLCBnZXRQcm9wZXJ0aWVzQnlUeXBlKTtcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "postValidate",
        "validate",
        "userSignUpValidate",
        "userSignInValidate",
        "userSignUp",
        "users",
        "userSignIn",
        "getAllProperties",
        "properties",
        "getPropertiesByType",
        "getProperty",
        "postProperty",
        "putProperty",
        "deleteProperty",
        "router",
        "express",
        "Router",
        "post",
        "get",
        "patch"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;IAEQA,Y,GAEuBC,qB,CAFvBD,Y;IACAE,kB,GACuBD,qB,CADvBC,kB;IACAC,kB,GAAuBF,qB,CAAvBE,kB;IACAC,U,GACeC,2B,CADfD,U;IACAE,U,GAAeD,2B,CAAfC,U;IACDC,gB,GAMHC,gC,CANGD,gB;IACAE,mB,GAKHD,gC,CALGC,mB;IACAC,W,GAIHF,gC,CAJGE,W;IACAC,Y,GAGHH,gC,CAHGG,Y;IACAC,W,GAEHJ,gC,CAFGI,W;IACAC,c,GACHL,gC,CADGK,c;;AAGP,IAAMC,MAAM,GAAGC,oBAAQC,MAAR,EAAf;AAGA;;;AACAF,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4Bf,kBAA5B,EAAgDE,UAAhD;AAEA;;AACAU,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4Bd,kBAA5B,EAAgDG,UAAhD;AAEA;;AACAQ,MAAM,CAACI,GAAP,CAAW,aAAX,EAA0BX,gBAA1B;AAEA;;AACAO,MAAM,CAACI,GAAP,CAAW,eAAX,EAA4BR,WAA5B;AAEA;;AACAI,MAAM,CAACG,IAAP,CAAY,WAAZ,EAAyBjB,YAAzB,EAAuCW,YAAvC;AAEA;;AACAG,MAAM,CAACK,KAAP,CAAa,eAAb,EAA8BP,WAA9B;AAEA;;AACAE,MAAM,UAAN,CAAc,eAAd,EAA+BD,cAA/B;AAEA;;AACAC,MAAM,CAACI,GAAP,CAAW,WAAX,EAAwBT,mBAAxB;eAGeK,M",
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\routes",
      "sourcesContent": [
        "import express from 'express';\r\nimport validate from '../helpers/validator';\r\nimport properties from '../controllers/propertiesController'\r\nimport users from '../controllers/usersController';\r\n\r\nconst { postValidate, \r\n        userSignUpValidate, \r\n        userSignInValidate } = validate;\r\nconst { userSignUp, \r\n        userSignIn } = users;\r\nconst {getAllProperties, \r\n       getPropertiesByType, \r\n       getProperty, \r\n       postProperty, \r\n       putProperty, \r\n       deleteProperty\r\n} = properties;\r\n\r\nconst router = express.Router();\r\n\r\n\r\n/*create account for user*/\r\nrouter.post('/auth/signup', userSignUpValidate, userSignUp);\r\n\r\n/*login route*/\r\nrouter.post('/auth/signin', userSignInValidate, userSignIn);\r\n\r\n/*search all properties*/\r\nrouter.get('/properties', getAllProperties);\r\n\r\n/*search one property*/\r\nrouter.get('/property/:id', getProperty);\r\n\r\n/* create a new property*/\r\nrouter.post('/property', postValidate, postProperty);\r\n\r\n/*update a property*/\r\nrouter.patch('/property/:id', putProperty);\r\n\r\n/*delete a property*/\r\nrouter.delete('/property/:id', deleteProperty);\r\n\r\n/*search all properties by type*/\r\nrouter.get('/property', getPropertiesByType);\r\n\r\n\r\nexport default router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562970987691
  },
  "{\"sourceRoot\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\helpers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Property-Pro-Lite1\",\"filename\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\helpers\\\\validator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Property-Pro-Lite1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Property-Pro-Lite1",
      "filename": "D:\\Property-Pro-Lite1\\server\\helpers\\validator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Property-Pro-Lite1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Property-Pro-Lite1\\server\\helpers\\validator.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Property-Pro-Lite1\\server\\helpers\\validator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
        "sourceFileName": "validator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _expressValidator = require(\"express-validator\");\n\nvar refactor1 = function refactor1(a, b) {\n  return (0, _expressValidator.check)(a).not().isEmpty().withMessage(\"\".concat(a, \" is required\")).isInt().withMessage(\"\".concat(a, \" must be a valid number\")).isLength({\n    min: 3\n  }).withMessage(b);\n};\n\nvar refactor2 = function refactor2(a, b) {\n  return (0, _expressValidator.check)(a).not().isEmpty().withMessage(\"\".concat(a, \" is required\")).isLength({\n    min: 3\n  }).withMessage(\"\".concat(a, \" should be \").concat(b, \" characters or more\"));\n};\n\nvar postValidate = [(0, _expressValidator.check)('owner', 'Owner should be set to a valid email').isEmail(), refactor1('price', 'not valid price amount'), (0, _expressValidator.check)('state', 'Enter state and must be more than three characters').isLength({\n  min: 3\n}), (0, _expressValidator.check)('city', 'Enter city and must be more than 3 character').isLength({\n  min: 3\n}), (0, _expressValidator.check)('address', 'Enter Address and must be more than 5 chars').isLength({\n  min: 5\n}), (0, _expressValidator.check)('type', 'Enter type and must be a valid type').isLength({\n  min: 3\n})];\nvar userSignUpValidate = [(0, _expressValidator.check)('email', 'you must use a valid Email').isEmail(), refactor2('first_name', 3), refactor2('last_name', 3), refactor2('password', 5), refactor1('phoneNumber', 'Use 11 character for phone number'), refactor2('address', 5)];\nvar userSignInValidate = [(0, _expressValidator.check)('email', 'you must use a valid Email').isEmail(), refactor2('password', 5)];\nvar _default = {\n  postValidate: postValidate,\n  userSignUpValidate: userSignUpValidate,\n  userSignInValidate: userSignInValidate\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRvci5qcyJdLCJuYW1lcyI6WyJyZWZhY3RvcjEiLCJhIiwiYiIsIm5vdCIsImlzRW1wdHkiLCJ3aXRoTWVzc2FnZSIsImlzSW50IiwiaXNMZW5ndGgiLCJtaW4iLCJyZWZhY3RvcjIiLCJwb3N0VmFsaWRhdGUiLCJpc0VtYWlsIiwidXNlclNpZ25VcFZhbGlkYXRlIiwidXNlclNpZ25JblZhbGlkYXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUEsSUFBTUEsU0FBUyxHQUFHLFNBQVpBLFNBQVksQ0FBQ0MsQ0FBRCxFQUFJQyxDQUFKO0FBQUEsU0FBVSw2QkFBTUQsQ0FBTixFQUN6QkUsR0FEeUIsR0FDbkJDLE9BRG1CLEdBQ1RDLFdBRFMsV0FDTUosQ0FETixtQkFFekJLLEtBRnlCLEdBR3pCRCxXQUh5QixXQUdWSixDQUhVLDhCQUl6Qk0sUUFKeUIsQ0FJaEI7QUFBRUMsSUFBQUEsR0FBRyxFQUFFO0FBQVAsR0FKZ0IsRUFLekJILFdBTHlCLENBS2JILENBTGEsQ0FBVjtBQUFBLENBQWxCOztBQU9BLElBQU1PLFNBQVMsR0FBRyxTQUFaQSxTQUFZLENBQUNSLENBQUQsRUFBSUMsQ0FBSjtBQUFBLFNBQVUsNkJBQU1ELENBQU4sRUFDekJFLEdBRHlCLEdBQ25CQyxPQURtQixHQUNUQyxXQURTLFdBQ01KLENBRE4sbUJBRXpCTSxRQUZ5QixDQUVoQjtBQUFFQyxJQUFBQSxHQUFHLEVBQUU7QUFBUCxHQUZnQixFQUd6QkgsV0FIeUIsV0FHVkosQ0FIVSx3QkFHS0MsQ0FITCx5QkFBVjtBQUFBLENBQWxCOztBQUtBLElBQU1RLFlBQVksR0FBRyxDQUNuQiw2QkFBTSxPQUFOLEVBQWUsc0NBQWYsRUFBdURDLE9BQXZELEVBRG1CLEVBRW5CWCxTQUFTLENBQUMsT0FBRCxFQUFVLHdCQUFWLENBRlUsRUFHbkIsNkJBQU0sT0FBTixFQUFlLG9EQUFmLEVBQXFFTyxRQUFyRSxDQUE4RTtBQUFFQyxFQUFBQSxHQUFHLEVBQUU7QUFBUCxDQUE5RSxDQUhtQixFQUluQiw2QkFBTSxNQUFOLEVBQWMsOENBQWQsRUFBOERELFFBQTlELENBQXVFO0FBQUVDLEVBQUFBLEdBQUcsRUFBRTtBQUFQLENBQXZFLENBSm1CLEVBS25CLDZCQUFNLFNBQU4sRUFBaUIsNkNBQWpCLEVBQWdFRCxRQUFoRSxDQUF5RTtBQUFFQyxFQUFBQSxHQUFHLEVBQUU7QUFBUCxDQUF6RSxDQUxtQixFQU1uQiw2QkFBTSxNQUFOLEVBQWMscUNBQWQsRUFBcURELFFBQXJELENBQThEO0FBQUVDLEVBQUFBLEdBQUcsRUFBRTtBQUFQLENBQTlELENBTm1CLENBQXJCO0FBU0EsSUFBTUksa0JBQWtCLEdBQUcsQ0FDekIsNkJBQU0sT0FBTixFQUFlLDRCQUFmLEVBQTZDRCxPQUE3QyxFQUR5QixFQUV6QkYsU0FBUyxDQUFDLFlBQUQsRUFBZSxDQUFmLENBRmdCLEVBR3pCQSxTQUFTLENBQUMsV0FBRCxFQUFjLENBQWQsQ0FIZ0IsRUFJekJBLFNBQVMsQ0FBQyxVQUFELEVBQWEsQ0FBYixDQUpnQixFQUt6QlQsU0FBUyxDQUFDLGFBQUQsRUFBZ0IsbUNBQWhCLENBTGdCLEVBTXpCUyxTQUFTLENBQUMsU0FBRCxFQUFZLENBQVosQ0FOZ0IsQ0FBM0I7QUFTQSxJQUFNSSxrQkFBa0IsR0FBRyxDQUN6Qiw2QkFBTSxPQUFOLEVBQWUsNEJBQWYsRUFBNkNGLE9BQTdDLEVBRHlCLEVBRXpCRixTQUFTLENBQUMsVUFBRCxFQUFhLENBQWIsQ0FGZ0IsQ0FBM0I7ZUFNZTtBQUFFQyxFQUFBQSxZQUFZLEVBQVpBLFlBQUY7QUFBZ0JFLEVBQUFBLGtCQUFrQixFQUFsQkEsa0JBQWhCO0FBQW9DQyxFQUFBQSxrQkFBa0IsRUFBbEJBO0FBQXBDLEMiLCJzb3VyY2VSb290IjoiRDpcXFByb3BlcnR5LVByby1MaXRlMVxcc2VydmVyXFxoZWxwZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2hlY2sgfSBmcm9tICdleHByZXNzLXZhbGlkYXRvcic7XHJcblxyXG5jb25zdCByZWZhY3RvcjEgPSAoYSwgYikgPT4gY2hlY2soYSlcclxuICAubm90KCkuaXNFbXB0eSgpLndpdGhNZXNzYWdlKGAke2F9IGlzIHJlcXVpcmVkYClcclxuICAuaXNJbnQoKVxyXG4gIC53aXRoTWVzc2FnZShgJHthfSBtdXN0IGJlIGEgdmFsaWQgbnVtYmVyYClcclxuICAuaXNMZW5ndGgoeyBtaW46IDMgfSlcclxuICAud2l0aE1lc3NhZ2UoYik7XHJcblxyXG5jb25zdCByZWZhY3RvcjIgPSAoYSwgYikgPT4gY2hlY2soYSlcclxuICAubm90KCkuaXNFbXB0eSgpLndpdGhNZXNzYWdlKGAke2F9IGlzIHJlcXVpcmVkYClcclxuICAuaXNMZW5ndGgoeyBtaW46IDMgfSlcclxuICAud2l0aE1lc3NhZ2UoYCR7YX0gc2hvdWxkIGJlICR7Yn0gY2hhcmFjdGVycyBvciBtb3JlYCk7XHJcblxyXG5jb25zdCBwb3N0VmFsaWRhdGUgPSBbXHJcbiAgY2hlY2soJ293bmVyJywgJ093bmVyIHNob3VsZCBiZSBzZXQgdG8gYSB2YWxpZCBlbWFpbCcpLmlzRW1haWwoKSxcclxuICByZWZhY3RvcjEoJ3ByaWNlJywgJ25vdCB2YWxpZCBwcmljZSBhbW91bnQnKSxcclxuICBjaGVjaygnc3RhdGUnLCAnRW50ZXIgc3RhdGUgYW5kIG11c3QgYmUgbW9yZSB0aGFuIHRocmVlIGNoYXJhY3RlcnMnKS5pc0xlbmd0aCh7IG1pbjogMyB9KSxcclxuICBjaGVjaygnY2l0eScsICdFbnRlciBjaXR5IGFuZCBtdXN0IGJlIG1vcmUgdGhhbiAzIGNoYXJhY3RlcicpLmlzTGVuZ3RoKHsgbWluOiAzIH0pLFxyXG4gIGNoZWNrKCdhZGRyZXNzJywgJ0VudGVyIEFkZHJlc3MgYW5kIG11c3QgYmUgbW9yZSB0aGFuIDUgY2hhcnMnKS5pc0xlbmd0aCh7IG1pbjogNSB9KSxcclxuICBjaGVjaygndHlwZScsICdFbnRlciB0eXBlIGFuZCBtdXN0IGJlIGEgdmFsaWQgdHlwZScpLmlzTGVuZ3RoKHsgbWluOiAzIH0pLFxyXG5dO1xyXG5cclxuY29uc3QgdXNlclNpZ25VcFZhbGlkYXRlID0gW1xyXG4gIGNoZWNrKCdlbWFpbCcsICd5b3UgbXVzdCB1c2UgYSB2YWxpZCBFbWFpbCcpLmlzRW1haWwoKSxcclxuICByZWZhY3RvcjIoJ2ZpcnN0X25hbWUnLCAzKSxcclxuICByZWZhY3RvcjIoJ2xhc3RfbmFtZScsIDMpLFxyXG4gIHJlZmFjdG9yMigncGFzc3dvcmQnLCA1KSxcclxuICByZWZhY3RvcjEoJ3Bob25lTnVtYmVyJywgJ1VzZSAxMSBjaGFyYWN0ZXIgZm9yIHBob25lIG51bWJlcicpLFxyXG4gIHJlZmFjdG9yMignYWRkcmVzcycsIDUpLFxyXG5dO1xyXG5cclxuY29uc3QgdXNlclNpZ25JblZhbGlkYXRlID0gW1xyXG4gIGNoZWNrKCdlbWFpbCcsICd5b3UgbXVzdCB1c2UgYSB2YWxpZCBFbWFpbCcpLmlzRW1haWwoKSxcclxuICByZWZhY3RvcjIoJ3Bhc3N3b3JkJywgNSksXHJcbl07XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgeyBwb3N0VmFsaWRhdGUsIHVzZXJTaWduVXBWYWxpZGF0ZSwgdXNlclNpZ25JblZhbGlkYXRlIH07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "validator.js"
      ],
      "names": [
        "refactor1",
        "a",
        "b",
        "not",
        "isEmpty",
        "withMessage",
        "isInt",
        "isLength",
        "min",
        "refactor2",
        "postValidate",
        "isEmail",
        "userSignUpValidate",
        "userSignInValidate"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,CAAD,EAAIC,CAAJ;AAAA,SAAU,6BAAMD,CAAN,EACzBE,GADyB,GACnBC,OADmB,GACTC,WADS,WACMJ,CADN,mBAEzBK,KAFyB,GAGzBD,WAHyB,WAGVJ,CAHU,8BAIzBM,QAJyB,CAIhB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAJgB,EAKzBH,WALyB,CAKbH,CALa,CAAV;AAAA,CAAlB;;AAOA,IAAMO,SAAS,GAAG,SAAZA,SAAY,CAACR,CAAD,EAAIC,CAAJ;AAAA,SAAU,6BAAMD,CAAN,EACzBE,GADyB,GACnBC,OADmB,GACTC,WADS,WACMJ,CADN,mBAEzBM,QAFyB,CAEhB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAFgB,EAGzBH,WAHyB,WAGVJ,CAHU,wBAGKC,CAHL,yBAAV;AAAA,CAAlB;;AAKA,IAAMQ,YAAY,GAAG,CACnB,6BAAM,OAAN,EAAe,sCAAf,EAAuDC,OAAvD,EADmB,EAEnBX,SAAS,CAAC,OAAD,EAAU,wBAAV,CAFU,EAGnB,6BAAM,OAAN,EAAe,oDAAf,EAAqEO,QAArE,CAA8E;AAAEC,EAAAA,GAAG,EAAE;AAAP,CAA9E,CAHmB,EAInB,6BAAM,MAAN,EAAc,8CAAd,EAA8DD,QAA9D,CAAuE;AAAEC,EAAAA,GAAG,EAAE;AAAP,CAAvE,CAJmB,EAKnB,6BAAM,SAAN,EAAiB,6CAAjB,EAAgED,QAAhE,CAAyE;AAAEC,EAAAA,GAAG,EAAE;AAAP,CAAzE,CALmB,EAMnB,6BAAM,MAAN,EAAc,qCAAd,EAAqDD,QAArD,CAA8D;AAAEC,EAAAA,GAAG,EAAE;AAAP,CAA9D,CANmB,CAArB;AASA,IAAMI,kBAAkB,GAAG,CACzB,6BAAM,OAAN,EAAe,4BAAf,EAA6CD,OAA7C,EADyB,EAEzBF,SAAS,CAAC,YAAD,EAAe,CAAf,CAFgB,EAGzBA,SAAS,CAAC,WAAD,EAAc,CAAd,CAHgB,EAIzBA,SAAS,CAAC,UAAD,EAAa,CAAb,CAJgB,EAKzBT,SAAS,CAAC,aAAD,EAAgB,mCAAhB,CALgB,EAMzBS,SAAS,CAAC,SAAD,EAAY,CAAZ,CANgB,CAA3B;AASA,IAAMI,kBAAkB,GAAG,CACzB,6BAAM,OAAN,EAAe,4BAAf,EAA6CF,OAA7C,EADyB,EAEzBF,SAAS,CAAC,UAAD,EAAa,CAAb,CAFgB,CAA3B;eAMe;AAAEC,EAAAA,YAAY,EAAZA,YAAF;AAAgBE,EAAAA,kBAAkB,EAAlBA,kBAAhB;AAAoCC,EAAAA,kBAAkB,EAAlBA;AAApC,C",
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
      "sourcesContent": [
        "import { check } from 'express-validator';\r\n\r\nconst refactor1 = (a, b) => check(a)\r\n  .not().isEmpty().withMessage(`${a} is required`)\r\n  .isInt()\r\n  .withMessage(`${a} must be a valid number`)\r\n  .isLength({ min: 3 })\r\n  .withMessage(b);\r\n\r\nconst refactor2 = (a, b) => check(a)\r\n  .not().isEmpty().withMessage(`${a} is required`)\r\n  .isLength({ min: 3 })\r\n  .withMessage(`${a} should be ${b} characters or more`);\r\n\r\nconst postValidate = [\r\n  check('owner', 'Owner should be set to a valid email').isEmail(),\r\n  refactor1('price', 'not valid price amount'),\r\n  check('state', 'Enter state and must be more than three characters').isLength({ min: 3 }),\r\n  check('city', 'Enter city and must be more than 3 character').isLength({ min: 3 }),\r\n  check('address', 'Enter Address and must be more than 5 chars').isLength({ min: 5 }),\r\n  check('type', 'Enter type and must be a valid type').isLength({ min: 3 }),\r\n];\r\n\r\nconst userSignUpValidate = [\r\n  check('email', 'you must use a valid Email').isEmail(),\r\n  refactor2('first_name', 3),\r\n  refactor2('last_name', 3),\r\n  refactor2('password', 5),\r\n  refactor1('phoneNumber', 'Use 11 character for phone number'),\r\n  refactor2('address', 5),\r\n];\r\n\r\nconst userSignInValidate = [\r\n  check('email', 'you must use a valid Email').isEmail(),\r\n  refactor2('password', 5),\r\n];\r\n\r\n\r\nexport default { postValidate, userSignUpValidate, userSignInValidate };\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562974090633
  },
  "{\"sourceRoot\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Property-Pro-Lite1\",\"filename\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\controllers\\\\propertiesController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Property-Pro-Lite1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Property-Pro-Lite1",
      "filename": "D:\\Property-Pro-Lite1\\server\\controllers\\propertiesController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Property-Pro-Lite1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Property-Pro-Lite1\\server\\controllers\\propertiesController.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Property-Pro-Lite1\\server\\controllers\\propertiesController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Property-Pro-Lite1\\server\\controllers",
        "sourceFileName": "propertiesController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _database = _interopRequireDefault(require(\"../models/database\"));\n\nvar _propertyHelper = _interopRequireDefault(require(\"../helpers/propertyHelper\"));\n\nvar _getProperty = _interopRequireDefault(require(\"../helpers/getProperty\"));\n\nvar _cloudinary = _interopRequireDefault(require(\"../helpers/cloudinary\"));\n\nvar _errorHelper = _interopRequireDefault(require(\"../helpers/errorHelper\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar saveNewProperty = _propertyHelper[\"default\"].saveNewProperty,\n    updateProperty = _propertyHelper[\"default\"].updateProperty,\n    deletesProperty = _propertyHelper[\"default\"].deletesProperty;\nvar property = _database[\"default\"].property;\nvar imageUpload = _cloudinary[\"default\"];\nvar inputError = _errorHelper[\"default\"].inputError;\n/**\r\n * check if the property id is correct\r\n * @param  {Object} req the request object\r\n * @return  {Function} calls the next middleware if test passes\r\n */\n\nvar checkProperty = function checkProperty(req) {\n  return property.find(function (prop) {\n    return prop.id === parseInt(req, 10);\n  });\n};\n\nvar checkPropertyType = function checkPropertyType(req) {\n  return property.find(function (prop) {\n    return prop.type === req;\n  });\n};\n/**\r\n * Get all properties.\r\n * @param {object} req the request object.\r\n * @param {object} res the response object.\r\n * @return  {Function} next calls the next middleware\r\n *\r\n*/\n\n\nvar getAllProperties = function getAllProperties(req, res) {\n  return res.status(200).send({\n    status: 'success',\n    data: {\n      message: 'Properties successfully received',\n      property: property\n    }\n  });\n};\n/**\r\n * Get all properties of a certain type, e.g 2 bedroom.\r\n * @param {object} req the request object.\r\n * @param {object} res the response object.\r\n * @return  {Function} next calls the next middleware\r\n *\r\n*/\n\n\nvar getPropertiesByType = function getPropertiesByType(req, res) {\n  (0, _getProperty[\"default\"])(checkPropertyType(req.query.type), res, 'Invalid type');\n};\n/**\r\n * Get a specific property.\r\n * @param {object} req the request object.\r\n * @param {object} res the response object.\r\n * @return  {Function} next calls the next middleware\r\n *\r\n*/\n\n\nvar getProperty = function getProperty(req, res) {\n  (0, _getProperty[\"default\"])(checkProperty(req.params.id), res, 'Invalid ID');\n};\n/**\r\n * Create/POST a property ad.\r\n * @param {object} req the request object.\r\n * @param {object} res the response object.\r\n * @return  {Function} next calls the next middleware\r\n *\r\n*/\n\n\nvar postProperty =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, owner, price, state, city, address, type, image_url, image_uri, newProperty;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, owner = _req$body.owner, price = _req$body.price, state = _req$body.state, city = _req$body.city, address = _req$body.address, type = _req$body.type, image_url = _req$body.image_url;\n            inputError(req, res);\n            image_uri = imageUpload(image_url);\n            _context.next = 5;\n            return saveNewProperty(owner, price, state, city, address, type, image_uri);\n\n          case 5:\n            newProperty = _context.sent;\n            return _context.abrupt(\"return\", res.status(201).send({\n              status: 'success',\n              data: {\n                newProperty: newProperty[newProperty.length - 1]\n              }\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function postProperty(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\r\n * Update property data.\r\n * @param {object} req the request object.\r\n * @param {object} res the response object.\r\n * @return  {Function} next calls the next middleware\r\n *\r\n*/\n\n\nvar putProperty = function putProperty(req, res) {\n  var data = checkProperty(req.params.id);\n\n  if (data !== undefined) {\n    var _req$body2 = req.body,\n        owner = _req$body2.owner,\n        status = _req$body2.status,\n        price = _req$body2.price,\n        state = _req$body2.state,\n        city = _req$body2.city,\n        address = _req$body2.address,\n        type = _req$body2.type,\n        image_url = _req$body2.image_url;\n    var updatedProperty = updateProperty(data.id, owner, status, price, state, city, address, type, image_url);\n    return res.status(201).send({\n      status: 'success',\n      data: {\n        message: 'Property updated successfully',\n        updatedProperty: updatedProperty\n      }\n    });\n  }\n\n  return res.status(400).send({\n    status: 'error',\n    error: 'Property ad not found'\n  });\n};\n/**\r\n * Delete a property ad.\r\n * @param {object} req the request object.\r\n * @param {object} res the response object.\r\n * @return  {Function} next calls the next middleware\r\n *\r\n*/\n\n\nvar deleteProperty =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var data;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return checkProperty(req.params.id);\n\n          case 2:\n            data = _context2.sent;\n\n            if (!(data !== undefined)) {\n              _context2.next = 7;\n              break;\n            }\n\n            _context2.next = 6;\n            return deletesProperty(data.id);\n\n          case 6:\n            return _context2.abrupt(\"return\", res.status(200).send({\n              status: 'success',\n              message: 'Property ad deleted successfully'\n            }));\n\n          case 7:\n            return _context2.abrupt(\"return\", res.status(400).send({\n              status: 'error',\n              error: 'Property ad not found'\n            }));\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function deleteProperty(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar _default = {\n  getAllProperties: getAllProperties,\n  getPropertiesByType: getPropertiesByType,\n  getProperty: getProperty,\n  postProperty: postProperty,\n  putProperty: putProperty,\n  deleteProperty: deleteProperty\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3BlcnRpZXNDb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbInNhdmVOZXdQcm9wZXJ0eSIsImhlbHBlcnMiLCJ1cGRhdGVQcm9wZXJ0eSIsImRlbGV0ZXNQcm9wZXJ0eSIsInByb3BlcnR5IiwiZGF0YWJhc2UiLCJpbWFnZVVwbG9hZCIsImNsb3VkaW5hcnkiLCJpbnB1dEVycm9yIiwiZXJyb3JIZWxwZXJzIiwiY2hlY2tQcm9wZXJ0eSIsInJlcSIsImZpbmQiLCJwcm9wIiwiaWQiLCJwYXJzZUludCIsImNoZWNrUHJvcGVydHlUeXBlIiwidHlwZSIsImdldEFsbFByb3BlcnRpZXMiLCJyZXMiLCJzdGF0dXMiLCJzZW5kIiwiZGF0YSIsIm1lc3NhZ2UiLCJnZXRQcm9wZXJ0aWVzQnlUeXBlIiwicXVlcnkiLCJnZXRQcm9wZXJ0eSIsInBhcmFtcyIsInBvc3RQcm9wZXJ0eSIsImJvZHkiLCJvd25lciIsInByaWNlIiwic3RhdGUiLCJjaXR5IiwiYWRkcmVzcyIsImltYWdlX3VybCIsImltYWdlX3VyaSIsIm5ld1Byb3BlcnR5IiwibGVuZ3RoIiwicHV0UHJvcGVydHkiLCJ1bmRlZmluZWQiLCJ1cGRhdGVkUHJvcGVydHkiLCJlcnJvciIsImRlbGV0ZVByb3BlcnR5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0lBRVFBLGUsR0FFb0JDLDBCLENBRnBCRCxlO0lBQ0FFLGMsR0FDb0JELDBCLENBRHBCQyxjO0lBQ0FDLGUsR0FBb0JGLDBCLENBQXBCRSxlO0lBQ0FDLFEsR0FBYUMsb0IsQ0FBYkQsUTtBQUNSLElBQU1FLFdBQVcsR0FBR0Msc0JBQXBCO0lBQ1FDLFUsR0FBZUMsdUIsQ0FBZkQsVTtBQUdSOzs7Ozs7QUFLQSxJQUFNRSxhQUFhLEdBQUcsU0FBaEJBLGFBQWdCLENBQUFDLEdBQUc7QUFBQSxTQUFJUCxRQUFRLENBQUNRLElBQVQsQ0FBYyxVQUFBQyxJQUFJO0FBQUEsV0FBSUEsSUFBSSxDQUFDQyxFQUFMLEtBQVlDLFFBQVEsQ0FBQ0osR0FBRCxFQUFNLEVBQU4sQ0FBeEI7QUFBQSxHQUFsQixDQUFKO0FBQUEsQ0FBekI7O0FBQ0EsSUFBTUssaUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFvQixDQUFBTCxHQUFHO0FBQUEsU0FBSVAsUUFBUSxDQUFDUSxJQUFULENBQWMsVUFBQUMsSUFBSTtBQUFBLFdBQUlBLElBQUksQ0FBQ0ksSUFBTCxLQUFjTixHQUFsQjtBQUFBLEdBQWxCLENBQUo7QUFBQSxDQUE3QjtBQUdBOzs7Ozs7Ozs7QUFRQSxJQUFNTyxnQkFBZ0IsR0FBRyxTQUFuQkEsZ0JBQW1CLENBQUNQLEdBQUQsRUFBTVEsR0FBTjtBQUFBLFNBQWNBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQzFERCxJQUFBQSxNQUFNLEVBQUUsU0FEa0Q7QUFFMURFLElBQUFBLElBQUksRUFBRTtBQUNKQyxNQUFBQSxPQUFPLEVBQUUsa0NBREw7QUFFSm5CLE1BQUFBLFFBQVEsRUFBUkE7QUFGSTtBQUZvRCxHQUFyQixDQUFkO0FBQUEsQ0FBekI7QUFRQTs7Ozs7Ozs7O0FBUUEsSUFBTW9CLG1CQUFtQixHQUFHLFNBQXRCQSxtQkFBc0IsQ0FBQ2IsR0FBRCxFQUFNUSxHQUFOLEVBQWM7QUFDeEMsK0JBQVNILGlCQUFpQixDQUFDTCxHQUFHLENBQUNjLEtBQUosQ0FBVVIsSUFBWCxDQUExQixFQUE0Q0UsR0FBNUMsRUFBaUQsY0FBakQ7QUFDRCxDQUZEO0FBSUE7Ozs7Ozs7OztBQVFBLElBQU1PLFdBQVcsR0FBRyxTQUFkQSxXQUFjLENBQUNmLEdBQUQsRUFBTVEsR0FBTixFQUFjO0FBQ2hDLCtCQUFTVCxhQUFhLENBQUNDLEdBQUcsQ0FBQ2dCLE1BQUosQ0FBV2IsRUFBWixDQUF0QixFQUF1Q0ssR0FBdkMsRUFBNEMsWUFBNUM7QUFDRCxDQUZEO0FBSUE7Ozs7Ozs7OztBQVFBLElBQU1TLFlBQVk7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUFHLGlCQUFPakIsR0FBUCxFQUFZUSxHQUFaO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSx3QkFHZlIsR0FBRyxDQUFDa0IsSUFIVyxFQUVqQkMsS0FGaUIsYUFFakJBLEtBRmlCLEVBRVZDLEtBRlUsYUFFVkEsS0FGVSxFQUVIQyxLQUZHLGFBRUhBLEtBRkcsRUFFSUMsSUFGSixhQUVJQSxJQUZKLEVBRVVDLE9BRlYsYUFFVUEsT0FGVixFQUVtQmpCLElBRm5CLGFBRW1CQSxJQUZuQixFQUV5QmtCLFNBRnpCLGFBRXlCQSxTQUZ6QjtBQUluQjNCLFlBQUFBLFVBQVUsQ0FBQ0csR0FBRCxFQUFNUSxHQUFOLENBQVY7QUFDTWlCLFlBQUFBLFNBTGEsR0FLRDlCLFdBQVcsQ0FBQzZCLFNBQUQsQ0FMVjtBQUFBO0FBQUEsbUJBT09uQyxlQUFlLENBQ3ZDOEIsS0FEdUMsRUFDaENDLEtBRGdDLEVBQ3pCQyxLQUR5QixFQUNsQkMsSUFEa0IsRUFDWkMsT0FEWSxFQUNIakIsSUFERyxFQUNHbUIsU0FESCxDQVB0Qjs7QUFBQTtBQU9iQyxZQUFBQSxXQVBhO0FBQUEsNkNBVVpsQixHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMxQkQsY0FBQUEsTUFBTSxFQUFFLFNBRGtCO0FBRTFCRSxjQUFBQSxJQUFJLEVBQUU7QUFDSmUsZ0JBQUFBLFdBQVcsRUFBRUEsV0FBVyxDQUFDQSxXQUFXLENBQUNDLE1BQVosR0FBcUIsQ0FBdEI7QUFEcEI7QUFGb0IsYUFBckIsQ0FWWTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFaVixZQUFZO0FBQUE7QUFBQTtBQUFBLEdBQWxCO0FBa0JBOzs7Ozs7Ozs7QUFRQSxJQUFNVyxXQUFXLEdBQUcsU0FBZEEsV0FBYyxDQUFDNUIsR0FBRCxFQUFNUSxHQUFOLEVBQWM7QUFDaEMsTUFBTUcsSUFBSSxHQUFHWixhQUFhLENBQUNDLEdBQUcsQ0FBQ2dCLE1BQUosQ0FBV2IsRUFBWixDQUExQjs7QUFDQSxNQUFJUSxJQUFJLEtBQUtrQixTQUFiLEVBQXdCO0FBQUEscUJBR2xCN0IsR0FBRyxDQUFDa0IsSUFIYztBQUFBLFFBRXBCQyxLQUZvQixjQUVwQkEsS0FGb0I7QUFBQSxRQUViVixNQUZhLGNBRWJBLE1BRmE7QUFBQSxRQUVMVyxLQUZLLGNBRUxBLEtBRks7QUFBQSxRQUVFQyxLQUZGLGNBRUVBLEtBRkY7QUFBQSxRQUVTQyxJQUZULGNBRVNBLElBRlQ7QUFBQSxRQUVlQyxPQUZmLGNBRWVBLE9BRmY7QUFBQSxRQUV3QmpCLElBRnhCLGNBRXdCQSxJQUZ4QjtBQUFBLFFBRThCa0IsU0FGOUIsY0FFOEJBLFNBRjlCO0FBS3RCLFFBQU1NLGVBQWUsR0FBR3ZDLGNBQWMsQ0FDcENvQixJQUFJLENBQUNSLEVBRCtCLEVBQzNCZ0IsS0FEMkIsRUFDcEJWLE1BRG9CLEVBQ1pXLEtBRFksRUFDTEMsS0FESyxFQUVwQ0MsSUFGb0MsRUFFOUJDLE9BRjhCLEVBRXJCakIsSUFGcUIsRUFFZmtCLFNBRmUsQ0FBdEM7QUFJQSxXQUFPaEIsR0FBRyxDQUFDQyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDMUJELE1BQUFBLE1BQU0sRUFBRSxTQURrQjtBQUUxQkUsTUFBQUEsSUFBSSxFQUFFO0FBQ0pDLFFBQUFBLE9BQU8sRUFBRSwrQkFETDtBQUVKa0IsUUFBQUEsZUFBZSxFQUFmQTtBQUZJO0FBRm9CLEtBQXJCLENBQVA7QUFPRDs7QUFDRCxTQUFPdEIsR0FBRyxDQUFDQyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDMUJELElBQUFBLE1BQU0sRUFBRSxPQURrQjtBQUUxQnNCLElBQUFBLEtBQUssRUFBRTtBQUZtQixHQUFyQixDQUFQO0FBSUQsQ0F2QkQ7QUF5QkE7Ozs7Ozs7OztBQVFBLElBQU1DLGNBQWM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUFHLGtCQUFPaEMsR0FBUCxFQUFZUSxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ0ZULGFBQWEsQ0FBQ0MsR0FBRyxDQUFDZ0IsTUFBSixDQUFXYixFQUFaLENBRFg7O0FBQUE7QUFDZlEsWUFBQUEsSUFEZTs7QUFBQSxrQkFFakJBLElBQUksS0FBS2tCLFNBRlE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSxtQkFJYnJDLGVBQWUsQ0FBQ21CLElBQUksQ0FBQ1IsRUFBTixDQUpGOztBQUFBO0FBQUEsOENBS1pLLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQzFCRCxjQUFBQSxNQUFNLEVBQUUsU0FEa0I7QUFFMUJHLGNBQUFBLE9BQU8sRUFBRTtBQUZpQixhQUFyQixDQUxZOztBQUFBO0FBQUEsOENBVWRKLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQzFCRCxjQUFBQSxNQUFNLEVBQUUsT0FEa0I7QUFFMUJzQixjQUFBQSxLQUFLLEVBQUU7QUFGbUIsYUFBckIsQ0FWYzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFkQyxjQUFjO0FBQUE7QUFBQTtBQUFBLEdBQXBCOztlQWlCZTtBQUNiekIsRUFBQUEsZ0JBQWdCLEVBQWhCQSxnQkFEYTtBQUViTSxFQUFBQSxtQkFBbUIsRUFBbkJBLG1CQUZhO0FBR2JFLEVBQUFBLFdBQVcsRUFBWEEsV0FIYTtBQUliRSxFQUFBQSxZQUFZLEVBQVpBLFlBSmE7QUFLYlcsRUFBQUEsV0FBVyxFQUFYQSxXQUxhO0FBTWJJLEVBQUFBLGNBQWMsRUFBZEE7QUFOYSxDIiwic291cmNlUm9vdCI6IkQ6XFxQcm9wZXJ0eS1Qcm8tTGl0ZTFcXHNlcnZlclxcY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGF0YWJhc2UgZnJvbSAnLi4vbW9kZWxzL2RhdGFiYXNlJztcclxuaW1wb3J0IGhlbHBlcnMgZnJvbSAnLi4vaGVscGVycy9wcm9wZXJ0eUhlbHBlcic7XHJcbmltcG9ydCBnZXRQcm9wcyBmcm9tICcuLi9oZWxwZXJzL2dldFByb3BlcnR5JztcclxuaW1wb3J0IGNsb3VkaW5hcnkgZnJvbSAnLi4vaGVscGVycy9jbG91ZGluYXJ5JztcclxuaW1wb3J0IGVycm9ySGVscGVycyBmcm9tICcuLi9oZWxwZXJzL2Vycm9ySGVscGVyJztcclxuXHJcbmNvbnN0IHsgc2F2ZU5ld1Byb3BlcnR5LCBcclxuICAgICAgICB1cGRhdGVQcm9wZXJ0eSwgXHJcbiAgICAgICAgZGVsZXRlc1Byb3BlcnR5IH0gPSBoZWxwZXJzO1xyXG5jb25zdCB7IHByb3BlcnR5IH0gPSBkYXRhYmFzZTtcclxuY29uc3QgaW1hZ2VVcGxvYWQgPSBjbG91ZGluYXJ5O1xyXG5jb25zdCB7IGlucHV0RXJyb3IgfSA9IGVycm9ySGVscGVycztcclxuXHJcblxyXG4vKipcclxuICogY2hlY2sgaWYgdGhlIHByb3BlcnR5IGlkIGlzIGNvcnJlY3RcclxuICogQHBhcmFtICB7T2JqZWN0fSByZXEgdGhlIHJlcXVlc3Qgb2JqZWN0XHJcbiAqIEByZXR1cm4gIHtGdW5jdGlvbn0gY2FsbHMgdGhlIG5leHQgbWlkZGxld2FyZSBpZiB0ZXN0IHBhc3Nlc1xyXG4gKi9cclxuY29uc3QgY2hlY2tQcm9wZXJ0eSA9IHJlcSA9PiBwcm9wZXJ0eS5maW5kKHByb3AgPT4gcHJvcC5pZCA9PT0gcGFyc2VJbnQocmVxLCAxMCkpO1xyXG5jb25zdCBjaGVja1Byb3BlcnR5VHlwZSA9IHJlcSA9PiBwcm9wZXJ0eS5maW5kKHByb3AgPT4gcHJvcC50eXBlID09PSByZXEpO1xyXG5cclxuXHJcbi8qKlxyXG4gKiBHZXQgYWxsIHByb3BlcnRpZXMuXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSByZXEgdGhlIHJlcXVlc3Qgb2JqZWN0LlxyXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzIHRoZSByZXNwb25zZSBvYmplY3QuXHJcbiAqIEByZXR1cm4gIHtGdW5jdGlvbn0gbmV4dCBjYWxscyB0aGUgbmV4dCBtaWRkbGV3YXJlXHJcbiAqXHJcbiovXHJcblxyXG5jb25zdCBnZXRBbGxQcm9wZXJ0aWVzID0gKHJlcSwgcmVzKSA9PiByZXMuc3RhdHVzKDIwMCkuc2VuZCh7XHJcbiAgc3RhdHVzOiAnc3VjY2VzcycsXHJcbiAgZGF0YToge1xyXG4gICAgbWVzc2FnZTogJ1Byb3BlcnRpZXMgc3VjY2Vzc2Z1bGx5IHJlY2VpdmVkJyxcclxuICAgIHByb3BlcnR5LFxyXG4gIH1cclxufSk7XHJcblxyXG4vKipcclxuICogR2V0IGFsbCBwcm9wZXJ0aWVzIG9mIGEgY2VydGFpbiB0eXBlLCBlLmcgMiBiZWRyb29tLlxyXG4gKiBAcGFyYW0ge29iamVjdH0gcmVxIHRoZSByZXF1ZXN0IG9iamVjdC5cclxuICogQHBhcmFtIHtvYmplY3R9IHJlcyB0aGUgcmVzcG9uc2Ugb2JqZWN0LlxyXG4gKiBAcmV0dXJuICB7RnVuY3Rpb259IG5leHQgY2FsbHMgdGhlIG5leHQgbWlkZGxld2FyZVxyXG4gKlxyXG4qL1xyXG5cclxuY29uc3QgZ2V0UHJvcGVydGllc0J5VHlwZSA9IChyZXEsIHJlcykgPT4ge1xyXG4gIGdldFByb3BzKGNoZWNrUHJvcGVydHlUeXBlKHJlcS5xdWVyeS50eXBlKSwgcmVzLCAnSW52YWxpZCB0eXBlJyk7XHJcbn07XHJcblxyXG4vKipcclxuICogR2V0IGEgc3BlY2lmaWMgcHJvcGVydHkuXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSByZXEgdGhlIHJlcXVlc3Qgb2JqZWN0LlxyXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzIHRoZSByZXNwb25zZSBvYmplY3QuXHJcbiAqIEByZXR1cm4gIHtGdW5jdGlvbn0gbmV4dCBjYWxscyB0aGUgbmV4dCBtaWRkbGV3YXJlXHJcbiAqXHJcbiovXHJcblxyXG5jb25zdCBnZXRQcm9wZXJ0eSA9IChyZXEsIHJlcykgPT4ge1xyXG4gIGdldFByb3BzKGNoZWNrUHJvcGVydHkocmVxLnBhcmFtcy5pZCksIHJlcywgJ0ludmFsaWQgSUQnKTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBDcmVhdGUvUE9TVCBhIHByb3BlcnR5IGFkLlxyXG4gKiBAcGFyYW0ge29iamVjdH0gcmVxIHRoZSByZXF1ZXN0IG9iamVjdC5cclxuICogQHBhcmFtIHtvYmplY3R9IHJlcyB0aGUgcmVzcG9uc2Ugb2JqZWN0LlxyXG4gKiBAcmV0dXJuICB7RnVuY3Rpb259IG5leHQgY2FsbHMgdGhlIG5leHQgbWlkZGxld2FyZVxyXG4gKlxyXG4qL1xyXG5cclxuY29uc3QgcG9zdFByb3BlcnR5ID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3Qge1xyXG4gICAgb3duZXIsIHByaWNlLCBzdGF0ZSwgY2l0eSwgYWRkcmVzcywgdHlwZSwgaW1hZ2VfdXJsXHJcbiAgfSA9IHJlcS5ib2R5O1xyXG4gIGlucHV0RXJyb3IocmVxLCByZXMpO1xyXG4gIGNvbnN0IGltYWdlX3VyaSA9IGltYWdlVXBsb2FkKGltYWdlX3VybCk7XHJcblxyXG4gIGNvbnN0IG5ld1Byb3BlcnR5ID0gYXdhaXQgc2F2ZU5ld1Byb3BlcnR5KFxyXG4gICAgb3duZXIsIHByaWNlLCBzdGF0ZSwgY2l0eSwgYWRkcmVzcywgdHlwZSwgaW1hZ2VfdXJpXHJcbiAgKTtcclxuICByZXR1cm4gcmVzLnN0YXR1cygyMDEpLnNlbmQoe1xyXG4gICAgc3RhdHVzOiAnc3VjY2VzcycsXHJcbiAgICBkYXRhOiB7XHJcbiAgICAgIG5ld1Byb3BlcnR5OiBuZXdQcm9wZXJ0eVtuZXdQcm9wZXJ0eS5sZW5ndGggLSAxXSxcclxuICAgIH1cclxuICB9KTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBVcGRhdGUgcHJvcGVydHkgZGF0YS5cclxuICogQHBhcmFtIHtvYmplY3R9IHJlcSB0aGUgcmVxdWVzdCBvYmplY3QuXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSByZXMgdGhlIHJlc3BvbnNlIG9iamVjdC5cclxuICogQHJldHVybiAge0Z1bmN0aW9ufSBuZXh0IGNhbGxzIHRoZSBuZXh0IG1pZGRsZXdhcmVcclxuICpcclxuKi9cclxuXHJcbmNvbnN0IHB1dFByb3BlcnR5ID0gKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgZGF0YSA9IGNoZWNrUHJvcGVydHkocmVxLnBhcmFtcy5pZCk7XHJcbiAgaWYgKGRhdGEgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgY29uc3Qge1xyXG4gICAgICBvd25lciwgc3RhdHVzLCBwcmljZSwgc3RhdGUsIGNpdHksIGFkZHJlc3MsIHR5cGUsIGltYWdlX3VybFxyXG4gICAgfSA9IHJlcS5ib2R5O1xyXG5cclxuICAgIGNvbnN0IHVwZGF0ZWRQcm9wZXJ0eSA9IHVwZGF0ZVByb3BlcnR5KFxyXG4gICAgICBkYXRhLmlkLCBvd25lciwgc3RhdHVzLCBwcmljZSwgc3RhdGUsXHJcbiAgICAgIGNpdHksIGFkZHJlc3MsIHR5cGUsIGltYWdlX3VybFxyXG4gICAgKTtcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMSkuc2VuZCh7XHJcbiAgICAgIHN0YXR1czogJ3N1Y2Nlc3MnLFxyXG4gICAgICBkYXRhOiB7XHJcbiAgICAgICAgbWVzc2FnZTogJ1Byb3BlcnR5IHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5JyxcclxuICAgICAgICB1cGRhdGVkUHJvcGVydHlcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG4gIHJldHVybiByZXMuc3RhdHVzKDQwMCkuc2VuZCh7XHJcbiAgICBzdGF0dXM6ICdlcnJvcicsXHJcbiAgICBlcnJvcjogJ1Byb3BlcnR5IGFkIG5vdCBmb3VuZCcsXHJcbiAgfSk7XHJcbn07XHJcblxyXG4vKipcclxuICogRGVsZXRlIGEgcHJvcGVydHkgYWQuXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSByZXEgdGhlIHJlcXVlc3Qgb2JqZWN0LlxyXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzIHRoZSByZXNwb25zZSBvYmplY3QuXHJcbiAqIEByZXR1cm4gIHtGdW5jdGlvbn0gbmV4dCBjYWxscyB0aGUgbmV4dCBtaWRkbGV3YXJlXHJcbiAqXHJcbiovXHJcblxyXG5jb25zdCBkZWxldGVQcm9wZXJ0eSA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IGRhdGEgPSBhd2FpdCBjaGVja1Byb3BlcnR5KHJlcS5wYXJhbXMuaWQpO1xyXG4gIGlmIChkYXRhICE9PSB1bmRlZmluZWQpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKGRhdGEuaWQpO1xyXG4gICAgYXdhaXQgZGVsZXRlc1Byb3BlcnR5KGRhdGEuaWQpO1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHtcclxuICAgICAgc3RhdHVzOiAnc3VjY2VzcycsXHJcbiAgICAgIG1lc3NhZ2U6ICdQcm9wZXJ0eSBhZCBkZWxldGVkIHN1Y2Nlc3NmdWxseScsXHJcbiAgICB9KTtcclxuICB9XHJcbiAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHtcclxuICAgIHN0YXR1czogJ2Vycm9yJyxcclxuICAgIGVycm9yOiAnUHJvcGVydHkgYWQgbm90IGZvdW5kJyxcclxuICB9KTtcclxufTtcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgZ2V0QWxsUHJvcGVydGllcywgXHJcbiAgZ2V0UHJvcGVydGllc0J5VHlwZSwgXHJcbiAgZ2V0UHJvcGVydHksIFxyXG4gIHBvc3RQcm9wZXJ0eSwgXHJcbiAgcHV0UHJvcGVydHksIFxyXG4gIGRlbGV0ZVByb3BlcnR5XHJcbn07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "propertiesController.js"
      ],
      "names": [
        "saveNewProperty",
        "helpers",
        "updateProperty",
        "deletesProperty",
        "property",
        "database",
        "imageUpload",
        "cloudinary",
        "inputError",
        "errorHelpers",
        "checkProperty",
        "req",
        "find",
        "prop",
        "id",
        "parseInt",
        "checkPropertyType",
        "type",
        "getAllProperties",
        "res",
        "status",
        "send",
        "data",
        "message",
        "getPropertiesByType",
        "query",
        "getProperty",
        "params",
        "postProperty",
        "body",
        "owner",
        "price",
        "state",
        "city",
        "address",
        "image_url",
        "image_uri",
        "newProperty",
        "length",
        "putProperty",
        "undefined",
        "updatedProperty",
        "error",
        "deleteProperty"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;IAEQA,e,GAEoBC,0B,CAFpBD,e;IACAE,c,GACoBD,0B,CADpBC,c;IACAC,e,GAAoBF,0B,CAApBE,e;IACAC,Q,GAAaC,oB,CAAbD,Q;AACR,IAAME,WAAW,GAAGC,sBAApB;IACQC,U,GAAeC,uB,CAAfD,U;AAGR;;;;;;AAKA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,GAAG;AAAA,SAAIP,QAAQ,CAACQ,IAAT,CAAc,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,EAAL,KAAYC,QAAQ,CAACJ,GAAD,EAAM,EAAN,CAAxB;AAAA,GAAlB,CAAJ;AAAA,CAAzB;;AACA,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAL,GAAG;AAAA,SAAIP,QAAQ,CAACQ,IAAT,CAAc,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACI,IAAL,KAAcN,GAAlB;AAAA,GAAlB,CAAJ;AAAA,CAA7B;AAGA;;;;;;;;;AAQA,IAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACP,GAAD,EAAMQ,GAAN;AAAA,SAAcA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1DD,IAAAA,MAAM,EAAE,SADkD;AAE1DE,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,kCADL;AAEJnB,MAAAA,QAAQ,EAARA;AAFI;AAFoD,GAArB,CAAd;AAAA,CAAzB;AAQA;;;;;;;;;AAQA,IAAMoB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACb,GAAD,EAAMQ,GAAN,EAAc;AACxC,+BAASH,iBAAiB,CAACL,GAAG,CAACc,KAAJ,CAAUR,IAAX,CAA1B,EAA4CE,GAA5C,EAAiD,cAAjD;AACD,CAFD;AAIA;;;;;;;;;AAQA,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAACf,GAAD,EAAMQ,GAAN,EAAc;AAChC,+BAAST,aAAa,CAACC,GAAG,CAACgB,MAAJ,CAAWb,EAAZ,CAAtB,EAAuCK,GAAvC,EAA4C,YAA5C;AACD,CAFD;AAIA;;;;;;;;;AAQA,IAAMS,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOjB,GAAP,EAAYQ,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBAGfR,GAAG,CAACkB,IAHW,EAEjBC,KAFiB,aAEjBA,KAFiB,EAEVC,KAFU,aAEVA,KAFU,EAEHC,KAFG,aAEHA,KAFG,EAEIC,IAFJ,aAEIA,IAFJ,EAEUC,OAFV,aAEUA,OAFV,EAEmBjB,IAFnB,aAEmBA,IAFnB,EAEyBkB,SAFzB,aAEyBA,SAFzB;AAInB3B,YAAAA,UAAU,CAACG,GAAD,EAAMQ,GAAN,CAAV;AACMiB,YAAAA,SALa,GAKD9B,WAAW,CAAC6B,SAAD,CALV;AAAA;AAAA,mBAOOnC,eAAe,CACvC8B,KADuC,EAChCC,KADgC,EACzBC,KADyB,EAClBC,IADkB,EACZC,OADY,EACHjB,IADG,EACGmB,SADH,CAPtB;;AAAA;AAObC,YAAAA,WAPa;AAAA,6CAUZlB,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,cAAAA,MAAM,EAAE,SADkB;AAE1BE,cAAAA,IAAI,EAAE;AACJe,gBAAAA,WAAW,EAAEA,WAAW,CAACA,WAAW,CAACC,MAAZ,GAAqB,CAAtB;AADpB;AAFoB,aAArB,CAVY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZV,YAAY;AAAA;AAAA;AAAA,GAAlB;AAkBA;;;;;;;;;AAQA,IAAMW,WAAW,GAAG,SAAdA,WAAc,CAAC5B,GAAD,EAAMQ,GAAN,EAAc;AAChC,MAAMG,IAAI,GAAGZ,aAAa,CAACC,GAAG,CAACgB,MAAJ,CAAWb,EAAZ,CAA1B;;AACA,MAAIQ,IAAI,KAAKkB,SAAb,EAAwB;AAAA,qBAGlB7B,GAAG,CAACkB,IAHc;AAAA,QAEpBC,KAFoB,cAEpBA,KAFoB;AAAA,QAEbV,MAFa,cAEbA,MAFa;AAAA,QAELW,KAFK,cAELA,KAFK;AAAA,QAEEC,KAFF,cAEEA,KAFF;AAAA,QAESC,IAFT,cAESA,IAFT;AAAA,QAEeC,OAFf,cAEeA,OAFf;AAAA,QAEwBjB,IAFxB,cAEwBA,IAFxB;AAAA,QAE8BkB,SAF9B,cAE8BA,SAF9B;AAKtB,QAAMM,eAAe,GAAGvC,cAAc,CACpCoB,IAAI,CAACR,EAD+B,EAC3BgB,KAD2B,EACpBV,MADoB,EACZW,KADY,EACLC,KADK,EAEpCC,IAFoC,EAE9BC,OAF8B,EAErBjB,IAFqB,EAEfkB,SAFe,CAAtC;AAIA,WAAOhB,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,MAAAA,MAAM,EAAE,SADkB;AAE1BE,MAAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAE,+BADL;AAEJkB,QAAAA,eAAe,EAAfA;AAFI;AAFoB,KAArB,CAAP;AAOD;;AACD,SAAOtB,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,IAAAA,MAAM,EAAE,OADkB;AAE1BsB,IAAAA,KAAK,EAAE;AAFmB,GAArB,CAAP;AAID,CAvBD;AAyBA;;;;;;;;;AAQA,IAAMC,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOhC,GAAP,EAAYQ,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFT,aAAa,CAACC,GAAG,CAACgB,MAAJ,CAAWb,EAAZ,CADX;;AAAA;AACfQ,YAAAA,IADe;;AAAA,kBAEjBA,IAAI,KAAKkB,SAFQ;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIbrC,eAAe,CAACmB,IAAI,CAACR,EAAN,CAJF;;AAAA;AAAA,8CAKZK,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,cAAAA,MAAM,EAAE,SADkB;AAE1BG,cAAAA,OAAO,EAAE;AAFiB,aAArB,CALY;;AAAA;AAAA,8CAUdJ,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,cAAAA,MAAM,EAAE,OADkB;AAE1BsB,cAAAA,KAAK,EAAE;AAFmB,aAArB,CAVc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdC,cAAc;AAAA;AAAA;AAAA,GAApB;;eAiBe;AACbzB,EAAAA,gBAAgB,EAAhBA,gBADa;AAEbM,EAAAA,mBAAmB,EAAnBA,mBAFa;AAGbE,EAAAA,WAAW,EAAXA,WAHa;AAIbE,EAAAA,YAAY,EAAZA,YAJa;AAKbW,EAAAA,WAAW,EAAXA,WALa;AAMbI,EAAAA,cAAc,EAAdA;AANa,C",
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\controllers",
      "sourcesContent": [
        "import database from '../models/database';\r\nimport helpers from '../helpers/propertyHelper';\r\nimport getProps from '../helpers/getProperty';\r\nimport cloudinary from '../helpers/cloudinary';\r\nimport errorHelpers from '../helpers/errorHelper';\r\n\r\nconst { saveNewProperty, \r\n        updateProperty, \r\n        deletesProperty } = helpers;\r\nconst { property } = database;\r\nconst imageUpload = cloudinary;\r\nconst { inputError } = errorHelpers;\r\n\r\n\r\n/**\r\n * check if the property id is correct\r\n * @param  {Object} req the request object\r\n * @return  {Function} calls the next middleware if test passes\r\n */\r\nconst checkProperty = req => property.find(prop => prop.id === parseInt(req, 10));\r\nconst checkPropertyType = req => property.find(prop => prop.type === req);\r\n\r\n\r\n/**\r\n * Get all properties.\r\n * @param {object} req the request object.\r\n * @param {object} res the response object.\r\n * @return  {Function} next calls the next middleware\r\n *\r\n*/\r\n\r\nconst getAllProperties = (req, res) => res.status(200).send({\r\n  status: 'success',\r\n  data: {\r\n    message: 'Properties successfully received',\r\n    property,\r\n  }\r\n});\r\n\r\n/**\r\n * Get all properties of a certain type, e.g 2 bedroom.\r\n * @param {object} req the request object.\r\n * @param {object} res the response object.\r\n * @return  {Function} next calls the next middleware\r\n *\r\n*/\r\n\r\nconst getPropertiesByType = (req, res) => {\r\n  getProps(checkPropertyType(req.query.type), res, 'Invalid type');\r\n};\r\n\r\n/**\r\n * Get a specific property.\r\n * @param {object} req the request object.\r\n * @param {object} res the response object.\r\n * @return  {Function} next calls the next middleware\r\n *\r\n*/\r\n\r\nconst getProperty = (req, res) => {\r\n  getProps(checkProperty(req.params.id), res, 'Invalid ID');\r\n};\r\n\r\n/**\r\n * Create/POST a property ad.\r\n * @param {object} req the request object.\r\n * @param {object} res the response object.\r\n * @return  {Function} next calls the next middleware\r\n *\r\n*/\r\n\r\nconst postProperty = async (req, res) => {\r\n  const {\r\n    owner, price, state, city, address, type, image_url\r\n  } = req.body;\r\n  inputError(req, res);\r\n  const image_uri = imageUpload(image_url);\r\n\r\n  const newProperty = await saveNewProperty(\r\n    owner, price, state, city, address, type, image_uri\r\n  );\r\n  return res.status(201).send({\r\n    status: 'success',\r\n    data: {\r\n      newProperty: newProperty[newProperty.length - 1],\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Update property data.\r\n * @param {object} req the request object.\r\n * @param {object} res the response object.\r\n * @return  {Function} next calls the next middleware\r\n *\r\n*/\r\n\r\nconst putProperty = (req, res) => {\r\n  const data = checkProperty(req.params.id);\r\n  if (data !== undefined) {\r\n    const {\r\n      owner, status, price, state, city, address, type, image_url\r\n    } = req.body;\r\n\r\n    const updatedProperty = updateProperty(\r\n      data.id, owner, status, price, state,\r\n      city, address, type, image_url\r\n    );\r\n    return res.status(201).send({\r\n      status: 'success',\r\n      data: {\r\n        message: 'Property updated successfully',\r\n        updatedProperty\r\n      }\r\n    });\r\n  }\r\n  return res.status(400).send({\r\n    status: 'error',\r\n    error: 'Property ad not found',\r\n  });\r\n};\r\n\r\n/**\r\n * Delete a property ad.\r\n * @param {object} req the request object.\r\n * @param {object} res the response object.\r\n * @return  {Function} next calls the next middleware\r\n *\r\n*/\r\n\r\nconst deleteProperty = async (req, res) => {\r\n  const data = await checkProperty(req.params.id);\r\n  if (data !== undefined) {\r\n    // console.log(data.id);\r\n    await deletesProperty(data.id);\r\n    return res.status(200).send({\r\n      status: 'success',\r\n      message: 'Property ad deleted successfully',\r\n    });\r\n  }\r\n  return res.status(400).send({\r\n    status: 'error',\r\n    error: 'Property ad not found',\r\n  });\r\n};\r\n\r\n\r\nexport default {\r\n  getAllProperties, \r\n  getPropertiesByType, \r\n  getProperty, \r\n  postProperty, \r\n  putProperty, \r\n  deleteProperty\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562966534752
  },
  "{\"sourceRoot\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Property-Pro-Lite1\",\"filename\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\models\\\\database.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Property-Pro-Lite1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Property-Pro-Lite1",
      "filename": "D:\\Property-Pro-Lite1\\server\\models\\database.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Property-Pro-Lite1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Property-Pro-Lite1\\server\\models\\database.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Property-Pro-Lite1\\server\\models\\database.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Property-Pro-Lite1\\server\\models",
        "sourceFileName": "database.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar users = [{\n  id: 1,\n  email: 'pacifique@gmail.com',\n  first_name: 'Pacifique',\n  last_name: 'kibaka',\n  password: 'password',\n  phoneNumber: '+0782641309',\n  address: 'Kn 12 Kigali',\n  is_admin: true\n}];\nvar property = [{\n  id: 1,\n  owner: 'pacifique@gmail.com',\n  status: 'available',\n  price: '5800000',\n  state: 'Rwanda',\n  city: 'Kigali',\n  address: 'Kn 12 Nyarutarama',\n  type: 'Villa',\n  created_on: new Date().toDateString()\n  /*image_url: 'https://res.cloudinary.com/chunkingz/image/upload/v1562322246/mh7swnfgxxmdew5c7chf.png',*/\n\n}, {\n  id: 2,\n  owner: 'john@gmail.com',\n  status: 'available',\n  price: '8500000',\n  state: 'Rwanda',\n  city: 'Gisenyi',\n  address: 'Kn 58 makoro',\n  type: 'Villa',\n  created_on: new Date().toDateString()\n  /*image_url: 'https://res.cloudinary.com/chunkingz/image/upload/v1562322246/mh7swnfgxxmdew5c7chf.png',*/\n\n}, {\n  id: 3,\n  owner: 'Peter@gmail.com',\n  status: 'available',\n  price: '87500000',\n  state: 'Rwanda',\n  city: 'Kagugu',\n  address: 'Kn 58 kagugu',\n  type: 'Villa',\n  created_on: new Date().toDateString()\n  /*image_url: 'https://res.cloudinary.com/chunkingz/image/upload/v1562322246/mh7swnfgxxmdew5c7chf.png',*/\n\n}, {\n  id: 4,\n  owner: 'Samu@gmail.com',\n  status: 'available',\n  price: '15800000',\n  state: 'Rwanda',\n  city: 'Nyarutarama',\n  address: 'Kn 58 Nyarutarama',\n  type: 'residential',\n  created_on: new Date().toDateString()\n  /*image_url: 'https://res.cloudinary.com/chunkingz/image/upload/v1562322246/mh7swnfgxxmdew5c7chf.png',*/\n\n}];\nvar flags = [{\n  id: 1,\n  property_id: '1',\n  created_on: '',\n  reason: 'Cyamunara',\n  description: 'The property is belong to bank'\n}];\nvar _default = {\n  users: users,\n  property: property,\n  flags: flags\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbInVzZXJzIiwiaWQiLCJlbWFpbCIsImZpcnN0X25hbWUiLCJsYXN0X25hbWUiLCJwYXNzd29yZCIsInBob25lTnVtYmVyIiwiYWRkcmVzcyIsImlzX2FkbWluIiwicHJvcGVydHkiLCJvd25lciIsInN0YXR1cyIsInByaWNlIiwic3RhdGUiLCJjaXR5IiwidHlwZSIsImNyZWF0ZWRfb24iLCJEYXRlIiwidG9EYXRlU3RyaW5nIiwiZmxhZ3MiLCJwcm9wZXJ0eV9pZCIsInJlYXNvbiIsImRlc2NyaXB0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFNQSxLQUFLLEdBQUcsQ0FDWjtBQUNFQyxFQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFQyxFQUFBQSxLQUFLLEVBQUUscUJBRlQ7QUFHRUMsRUFBQUEsVUFBVSxFQUFFLFdBSGQ7QUFJRUMsRUFBQUEsU0FBUyxFQUFFLFFBSmI7QUFLRUMsRUFBQUEsUUFBUSxFQUFFLFVBTFo7QUFNRUMsRUFBQUEsV0FBVyxFQUFFLGFBTmY7QUFPRUMsRUFBQUEsT0FBTyxFQUFFLGNBUFg7QUFRRUMsRUFBQUEsUUFBUSxFQUFFO0FBUlosQ0FEWSxDQUFkO0FBYUEsSUFBTUMsUUFBUSxHQUFHLENBQ2Y7QUFDRVIsRUFBQUEsRUFBRSxFQUFFLENBRE47QUFFRVMsRUFBQUEsS0FBSyxFQUFFLHFCQUZUO0FBR0VDLEVBQUFBLE1BQU0sRUFBRSxXQUhWO0FBSUVDLEVBQUFBLEtBQUssRUFBRSxTQUpUO0FBS0VDLEVBQUFBLEtBQUssRUFBRSxRQUxUO0FBTUVDLEVBQUFBLElBQUksRUFBRSxRQU5SO0FBT0VQLEVBQUFBLE9BQU8sRUFBRSxtQkFQWDtBQVFFUSxFQUFBQSxJQUFJLEVBQUUsT0FSUjtBQVNFQyxFQUFBQSxVQUFVLEVBQUUsSUFBSUMsSUFBSixHQUFXQyxZQUFYO0FBQ1o7O0FBVkYsQ0FEZSxFQWFmO0FBQ0VqQixFQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFUyxFQUFBQSxLQUFLLEVBQUUsZ0JBRlQ7QUFHRUMsRUFBQUEsTUFBTSxFQUFFLFdBSFY7QUFJRUMsRUFBQUEsS0FBSyxFQUFFLFNBSlQ7QUFLRUMsRUFBQUEsS0FBSyxFQUFFLFFBTFQ7QUFNRUMsRUFBQUEsSUFBSSxFQUFFLFNBTlI7QUFPRVAsRUFBQUEsT0FBTyxFQUFFLGNBUFg7QUFRRVEsRUFBQUEsSUFBSSxFQUFFLE9BUlI7QUFTRUMsRUFBQUEsVUFBVSxFQUFFLElBQUlDLElBQUosR0FBV0MsWUFBWDtBQUNaOztBQVZGLENBYmUsRUF5QmY7QUFDRWpCLEVBQUFBLEVBQUUsRUFBRSxDQUROO0FBRUVTLEVBQUFBLEtBQUssRUFBRSxpQkFGVDtBQUdFQyxFQUFBQSxNQUFNLEVBQUUsV0FIVjtBQUlFQyxFQUFBQSxLQUFLLEVBQUUsVUFKVDtBQUtFQyxFQUFBQSxLQUFLLEVBQUUsUUFMVDtBQU1FQyxFQUFBQSxJQUFJLEVBQUUsUUFOUjtBQU9FUCxFQUFBQSxPQUFPLEVBQUUsY0FQWDtBQVFFUSxFQUFBQSxJQUFJLEVBQUUsT0FSUjtBQVNFQyxFQUFBQSxVQUFVLEVBQUUsSUFBSUMsSUFBSixHQUFXQyxZQUFYO0FBQ1o7O0FBVkYsQ0F6QmUsRUFxQ2Y7QUFDRWpCLEVBQUFBLEVBQUUsRUFBRSxDQUROO0FBRUVTLEVBQUFBLEtBQUssRUFBRSxnQkFGVDtBQUdFQyxFQUFBQSxNQUFNLEVBQUUsV0FIVjtBQUlFQyxFQUFBQSxLQUFLLEVBQUUsVUFKVDtBQUtFQyxFQUFBQSxLQUFLLEVBQUUsUUFMVDtBQU1FQyxFQUFBQSxJQUFJLEVBQUUsYUFOUjtBQU9FUCxFQUFBQSxPQUFPLEVBQUUsbUJBUFg7QUFRRVEsRUFBQUEsSUFBSSxFQUFFLGFBUlI7QUFTRUMsRUFBQUEsVUFBVSxFQUFFLElBQUlDLElBQUosR0FBV0MsWUFBWDtBQUNaOztBQVZGLENBckNlLENBQWpCO0FBbURBLElBQU1DLEtBQUssR0FBRyxDQUNaO0FBQ0VsQixFQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFbUIsRUFBQUEsV0FBVyxFQUFFLEdBRmY7QUFHRUosRUFBQUEsVUFBVSxFQUFFLEVBSGQ7QUFJRUssRUFBQUEsTUFBTSxFQUFFLFdBSlY7QUFLRUMsRUFBQUEsV0FBVyxFQUFFO0FBTGYsQ0FEWSxDQUFkO2VBVWU7QUFBRXRCLEVBQUFBLEtBQUssRUFBTEEsS0FBRjtBQUFTUyxFQUFBQSxRQUFRLEVBQVJBLFFBQVQ7QUFBbUJVLEVBQUFBLEtBQUssRUFBTEE7QUFBbkIsQyIsInNvdXJjZVJvb3QiOiJEOlxcUHJvcGVydHktUHJvLUxpdGUxXFxzZXJ2ZXJcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHVzZXJzID0gW1xyXG4gIHtcclxuICAgIGlkOiAxLFxyXG4gICAgZW1haWw6ICdwYWNpZmlxdWVAZ21haWwuY29tJyxcclxuICAgIGZpcnN0X25hbWU6ICdQYWNpZmlxdWUnLFxyXG4gICAgbGFzdF9uYW1lOiAna2liYWthJyxcclxuICAgIHBhc3N3b3JkOiAncGFzc3dvcmQnLFxyXG4gICAgcGhvbmVOdW1iZXI6ICcrMDc4MjY0MTMwOScsXHJcbiAgICBhZGRyZXNzOiAnS24gMTIgS2lnYWxpJyxcclxuICAgIGlzX2FkbWluOiB0cnVlXHJcbiAgfVxyXG5dO1xyXG5cclxuY29uc3QgcHJvcGVydHkgPSBbXHJcbiAge1xyXG4gICAgaWQ6IDEsXHJcbiAgICBvd25lcjogJ3BhY2lmaXF1ZUBnbWFpbC5jb20nLFxyXG4gICAgc3RhdHVzOiAnYXZhaWxhYmxlJyxcclxuICAgIHByaWNlOiAnNTgwMDAwMCcsXHJcbiAgICBzdGF0ZTogJ1J3YW5kYScsXHJcbiAgICBjaXR5OiAnS2lnYWxpJyxcclxuICAgIGFkZHJlc3M6ICdLbiAxMiBOeWFydXRhcmFtYScsXHJcbiAgICB0eXBlOiAnVmlsbGEnLFxyXG4gICAgY3JlYXRlZF9vbjogbmV3IERhdGUoKS50b0RhdGVTdHJpbmcoKSxcclxuICAgIC8qaW1hZ2VfdXJsOiAnaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vY2h1bmtpbmd6L2ltYWdlL3VwbG9hZC92MTU2MjMyMjI0Ni9taDdzd25mZ3h4bWRldzVjN2NoZi5wbmcnLCovXHJcbiAgfSxcclxuICB7XHJcbiAgICBpZDogMixcclxuICAgIG93bmVyOiAnam9obkBnbWFpbC5jb20nLFxyXG4gICAgc3RhdHVzOiAnYXZhaWxhYmxlJyxcclxuICAgIHByaWNlOiAnODUwMDAwMCcsXHJcbiAgICBzdGF0ZTogJ1J3YW5kYScsXHJcbiAgICBjaXR5OiAnR2lzZW55aScsXHJcbiAgICBhZGRyZXNzOiAnS24gNTggbWFrb3JvJyxcclxuICAgIHR5cGU6ICdWaWxsYScsXHJcbiAgICBjcmVhdGVkX29uOiBuZXcgRGF0ZSgpLnRvRGF0ZVN0cmluZygpLFxyXG4gICAgLyppbWFnZV91cmw6ICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9jaHVua2luZ3ovaW1hZ2UvdXBsb2FkL3YxNTYyMzIyMjQ2L21oN3N3bmZneHhtZGV3NWM3Y2hmLnBuZycsKi9cclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiAzLFxyXG4gICAgb3duZXI6ICdQZXRlckBnbWFpbC5jb20nLFxyXG4gICAgc3RhdHVzOiAnYXZhaWxhYmxlJyxcclxuICAgIHByaWNlOiAnODc1MDAwMDAnLFxyXG4gICAgc3RhdGU6ICdSd2FuZGEnLFxyXG4gICAgY2l0eTogJ0thZ3VndScsXHJcbiAgICBhZGRyZXNzOiAnS24gNTgga2FndWd1JyxcclxuICAgIHR5cGU6ICdWaWxsYScsXHJcbiAgICBjcmVhdGVkX29uOiBuZXcgRGF0ZSgpLnRvRGF0ZVN0cmluZygpLFxyXG4gICAgLyppbWFnZV91cmw6ICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9jaHVua2luZ3ovaW1hZ2UvdXBsb2FkL3YxNTYyMzIyMjQ2L21oN3N3bmZneHhtZGV3NWM3Y2hmLnBuZycsKi9cclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiA0LFxyXG4gICAgb3duZXI6ICdTYW11QGdtYWlsLmNvbScsXHJcbiAgICBzdGF0dXM6ICdhdmFpbGFibGUnLFxyXG4gICAgcHJpY2U6ICcxNTgwMDAwMCcsXHJcbiAgICBzdGF0ZTogJ1J3YW5kYScsXHJcbiAgICBjaXR5OiAnTnlhcnV0YXJhbWEnLFxyXG4gICAgYWRkcmVzczogJ0tuIDU4IE55YXJ1dGFyYW1hJyxcclxuICAgIHR5cGU6ICdyZXNpZGVudGlhbCcsXHJcbiAgICBjcmVhdGVkX29uOiBuZXcgRGF0ZSgpLnRvRGF0ZVN0cmluZygpLFxyXG4gICAgLyppbWFnZV91cmw6ICdodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9jaHVua2luZ3ovaW1hZ2UvdXBsb2FkL3YxNTYyMzIyMjQ2L21oN3N3bmZneHhtZGV3NWM3Y2hmLnBuZycsKi9cclxuICB9LFxyXG5dO1xyXG5cclxuY29uc3QgZmxhZ3MgPSBbXHJcbiAge1xyXG4gICAgaWQ6IDEsXHJcbiAgICBwcm9wZXJ0eV9pZDogJzEnLFxyXG4gICAgY3JlYXRlZF9vbjogJycsXHJcbiAgICByZWFzb246ICdDeWFtdW5hcmEnLFxyXG4gICAgZGVzY3JpcHRpb246ICdUaGUgcHJvcGVydHkgaXMgYmVsb25nIHRvIGJhbmsnXHJcbiAgfVxyXG5dO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgeyB1c2VycywgcHJvcGVydHksIGZsYWdzIH07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "users",
        "id",
        "email",
        "first_name",
        "last_name",
        "password",
        "phoneNumber",
        "address",
        "is_admin",
        "property",
        "owner",
        "status",
        "price",
        "state",
        "city",
        "type",
        "created_on",
        "Date",
        "toDateString",
        "flags",
        "property_id",
        "reason",
        "description"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,KAAK,GAAG,CACZ;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,qBAFT;AAGEC,EAAAA,UAAU,EAAE,WAHd;AAIEC,EAAAA,SAAS,EAAE,QAJb;AAKEC,EAAAA,QAAQ,EAAE,UALZ;AAMEC,EAAAA,WAAW,EAAE,aANf;AAOEC,EAAAA,OAAO,EAAE,cAPX;AAQEC,EAAAA,QAAQ,EAAE;AARZ,CADY,CAAd;AAaA,IAAMC,QAAQ,GAAG,CACf;AACER,EAAAA,EAAE,EAAE,CADN;AAEES,EAAAA,KAAK,EAAE,qBAFT;AAGEC,EAAAA,MAAM,EAAE,WAHV;AAIEC,EAAAA,KAAK,EAAE,SAJT;AAKEC,EAAAA,KAAK,EAAE,QALT;AAMEC,EAAAA,IAAI,EAAE,QANR;AAOEP,EAAAA,OAAO,EAAE,mBAPX;AAQEQ,EAAAA,IAAI,EAAE,OARR;AASEC,EAAAA,UAAU,EAAE,IAAIC,IAAJ,GAAWC,YAAX;AACZ;;AAVF,CADe,EAaf;AACEjB,EAAAA,EAAE,EAAE,CADN;AAEES,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,MAAM,EAAE,WAHV;AAIEC,EAAAA,KAAK,EAAE,SAJT;AAKEC,EAAAA,KAAK,EAAE,QALT;AAMEC,EAAAA,IAAI,EAAE,SANR;AAOEP,EAAAA,OAAO,EAAE,cAPX;AAQEQ,EAAAA,IAAI,EAAE,OARR;AASEC,EAAAA,UAAU,EAAE,IAAIC,IAAJ,GAAWC,YAAX;AACZ;;AAVF,CAbe,EAyBf;AACEjB,EAAAA,EAAE,EAAE,CADN;AAEES,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,MAAM,EAAE,WAHV;AAIEC,EAAAA,KAAK,EAAE,UAJT;AAKEC,EAAAA,KAAK,EAAE,QALT;AAMEC,EAAAA,IAAI,EAAE,QANR;AAOEP,EAAAA,OAAO,EAAE,cAPX;AAQEQ,EAAAA,IAAI,EAAE,OARR;AASEC,EAAAA,UAAU,EAAE,IAAIC,IAAJ,GAAWC,YAAX;AACZ;;AAVF,CAzBe,EAqCf;AACEjB,EAAAA,EAAE,EAAE,CADN;AAEES,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,MAAM,EAAE,WAHV;AAIEC,EAAAA,KAAK,EAAE,UAJT;AAKEC,EAAAA,KAAK,EAAE,QALT;AAMEC,EAAAA,IAAI,EAAE,aANR;AAOEP,EAAAA,OAAO,EAAE,mBAPX;AAQEQ,EAAAA,IAAI,EAAE,aARR;AASEC,EAAAA,UAAU,EAAE,IAAIC,IAAJ,GAAWC,YAAX;AACZ;;AAVF,CArCe,CAAjB;AAmDA,IAAMC,KAAK,GAAG,CACZ;AACElB,EAAAA,EAAE,EAAE,CADN;AAEEmB,EAAAA,WAAW,EAAE,GAFf;AAGEJ,EAAAA,UAAU,EAAE,EAHd;AAIEK,EAAAA,MAAM,EAAE,WAJV;AAKEC,EAAAA,WAAW,EAAE;AALf,CADY,CAAd;eAUe;AAAEtB,EAAAA,KAAK,EAALA,KAAF;AAASS,EAAAA,QAAQ,EAARA,QAAT;AAAmBU,EAAAA,KAAK,EAALA;AAAnB,C",
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\models",
      "sourcesContent": [
        "const users = [\r\n  {\r\n    id: 1,\r\n    email: 'pacifique@gmail.com',\r\n    first_name: 'Pacifique',\r\n    last_name: 'kibaka',\r\n    password: 'password',\r\n    phoneNumber: '+0782641309',\r\n    address: 'Kn 12 Kigali',\r\n    is_admin: true\r\n  }\r\n];\r\n\r\nconst property = [\r\n  {\r\n    id: 1,\r\n    owner: 'pacifique@gmail.com',\r\n    status: 'available',\r\n    price: '5800000',\r\n    state: 'Rwanda',\r\n    city: 'Kigali',\r\n    address: 'Kn 12 Nyarutarama',\r\n    type: 'Villa',\r\n    created_on: new Date().toDateString(),\r\n    /*image_url: 'https://res.cloudinary.com/chunkingz/image/upload/v1562322246/mh7swnfgxxmdew5c7chf.png',*/\r\n  },\r\n  {\r\n    id: 2,\r\n    owner: 'john@gmail.com',\r\n    status: 'available',\r\n    price: '8500000',\r\n    state: 'Rwanda',\r\n    city: 'Gisenyi',\r\n    address: 'Kn 58 makoro',\r\n    type: 'Villa',\r\n    created_on: new Date().toDateString(),\r\n    /*image_url: 'https://res.cloudinary.com/chunkingz/image/upload/v1562322246/mh7swnfgxxmdew5c7chf.png',*/\r\n  },\r\n  {\r\n    id: 3,\r\n    owner: 'Peter@gmail.com',\r\n    status: 'available',\r\n    price: '87500000',\r\n    state: 'Rwanda',\r\n    city: 'Kagugu',\r\n    address: 'Kn 58 kagugu',\r\n    type: 'Villa',\r\n    created_on: new Date().toDateString(),\r\n    /*image_url: 'https://res.cloudinary.com/chunkingz/image/upload/v1562322246/mh7swnfgxxmdew5c7chf.png',*/\r\n  },\r\n  {\r\n    id: 4,\r\n    owner: 'Samu@gmail.com',\r\n    status: 'available',\r\n    price: '15800000',\r\n    state: 'Rwanda',\r\n    city: 'Nyarutarama',\r\n    address: 'Kn 58 Nyarutarama',\r\n    type: 'residential',\r\n    created_on: new Date().toDateString(),\r\n    /*image_url: 'https://res.cloudinary.com/chunkingz/image/upload/v1562322246/mh7swnfgxxmdew5c7chf.png',*/\r\n  },\r\n];\r\n\r\nconst flags = [\r\n  {\r\n    id: 1,\r\n    property_id: '1',\r\n    created_on: '',\r\n    reason: 'Cyamunara',\r\n    description: 'The property is belong to bank'\r\n  }\r\n];\r\n\r\nexport default { users, property, flags };\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562973114773
  },
  "{\"sourceRoot\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\helpers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Property-Pro-Lite1\",\"filename\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\helpers\\\\propertyHelper.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Property-Pro-Lite1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Property-Pro-Lite1",
      "filename": "D:\\Property-Pro-Lite1\\server\\helpers\\propertyHelper.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Property-Pro-Lite1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Property-Pro-Lite1\\server\\helpers\\propertyHelper.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Property-Pro-Lite1\\server\\helpers\\propertyHelper.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
        "sourceFileName": "propertyHelper.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _database = _interopRequireDefault(require(\"../models/database\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar property = _database[\"default\"].property;\n/**\r\n   * Create a new property.\r\n   * @param {object} owner the owner of the property ad.\r\n   * @param {object} status current status of the property ad, e.g available/sold.\r\n   * @param {object} price the price of the property ad.\r\n   * @param {object} state the state location of the property ad.\r\n   * @param {object} city the city location of the property ad.\r\n   * @param {object} address the address location of the property ad.\r\n   * @param {object} type the type of the property ad, e.g 2 bedroom.\r\n   * @param {object} created_on the date the property ad was posted.\r\n   * @param {object} image_url the image url of the property ad.\r\n   * @return  {Function} next calls the next middleware\r\n   *\r\n   */\n\nvar saveNewProperty = function saveNewProperty(owner, price, state, city, address, type, image_url) {\n  var newProperty = {\n    id: property.length + 1,\n    owner: owner,\n    status: 'available',\n    price: price,\n    state: state,\n    city: city,\n    address: address,\n    type: type,\n    created_on: new Date().toDateString(),\n    image_url: image_url\n  };\n  property.push(newProperty);\n  return property;\n};\n/**\r\n   * Update existing property.\r\n   * @param {object} owner the owner of the property ad.\r\n   * @param {object} status current status of the property ad, e.g available/sold.\r\n   * @param {object} price the price of the property ad.\r\n   * @param {object} state the state location of the property ad.\r\n   * @param {object} city the city location of the property ad.\r\n   * @param {object} address the address location of the property ad.\r\n   * @param {object} type the type of the property ad, e.g 2 bedroom.\r\n   * @param {object} created_on the date the property ad was posted.\r\n   * @param {object} image_url the image url of the property ad.\r\n   * @return  {Function} next calls the next middleware\r\n   *\r\n   */\n\n\nvar updateProperty = function updateProperty(id, owner, status, price, state, city, address, type, image_url) {\n  var propertyId = property.find(function (prop) {\n    return prop.id === id;\n  });\n  propertyId.owner = owner || propertyId.owner;\n  propertyId.status = status || propertyId.status;\n  propertyId.price = price || propertyId.price;\n  propertyId.state = state || propertyId.state;\n  propertyId.city = city || propertyId.city;\n  propertyId.address = address || propertyId.address;\n  propertyId.type = type || propertyId.type;\n  propertyId.image_url = image_url || propertyId.image_url;\n  return propertyId;\n};\n/**\r\n   * Delete existing property.\r\n   * @param {object} id the id of the property ad to be deleted.\r\n   * @return  {Function} next calls the next middleware\r\n   *\r\n   */\n\n\nvar deletesProperty = function deletesProperty(id) {\n  var index = property.indexOf(id);\n  property.splice(index, 1);\n};\n\nvar _default = {\n  saveNewProperty: saveNewProperty,\n  updateProperty: updateProperty,\n  deletesProperty: deletesProperty\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3BlcnR5SGVscGVyLmpzIl0sIm5hbWVzIjpbInByb3BlcnR5IiwiZGF0YWJhc2UiLCJzYXZlTmV3UHJvcGVydHkiLCJvd25lciIsInByaWNlIiwic3RhdGUiLCJjaXR5IiwiYWRkcmVzcyIsInR5cGUiLCJpbWFnZV91cmwiLCJuZXdQcm9wZXJ0eSIsImlkIiwibGVuZ3RoIiwic3RhdHVzIiwiY3JlYXRlZF9vbiIsIkRhdGUiLCJ0b0RhdGVTdHJpbmciLCJwdXNoIiwidXBkYXRlUHJvcGVydHkiLCJwcm9wZXJ0eUlkIiwiZmluZCIsInByb3AiLCJkZWxldGVzUHJvcGVydHkiLCJpbmRleCIsImluZGV4T2YiLCJzcGxpY2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztJQUVRQSxRLEdBQWFDLG9CLENBQWJELFE7QUFHUjs7Ozs7Ozs7Ozs7Ozs7O0FBZUEsSUFBTUUsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQixDQUFDQyxLQUFELEVBQVFDLEtBQVIsRUFBZUMsS0FBZixFQUFzQkMsSUFBdEIsRUFBNEJDLE9BQTVCLEVBQXFDQyxJQUFyQyxFQUEyQ0MsU0FBM0MsRUFBeUQ7QUFDL0UsTUFBTUMsV0FBVyxHQUFHO0FBQ2xCQyxJQUFBQSxFQUFFLEVBQUVYLFFBQVEsQ0FBQ1ksTUFBVCxHQUFrQixDQURKO0FBRWxCVCxJQUFBQSxLQUFLLEVBQUxBLEtBRmtCO0FBR2xCVSxJQUFBQSxNQUFNLEVBQUUsV0FIVTtBQUlsQlQsSUFBQUEsS0FBSyxFQUFMQSxLQUprQjtBQUtsQkMsSUFBQUEsS0FBSyxFQUFMQSxLQUxrQjtBQU1sQkMsSUFBQUEsSUFBSSxFQUFKQSxJQU5rQjtBQU9sQkMsSUFBQUEsT0FBTyxFQUFQQSxPQVBrQjtBQVFsQkMsSUFBQUEsSUFBSSxFQUFKQSxJQVJrQjtBQVNsQk0sSUFBQUEsVUFBVSxFQUFFLElBQUlDLElBQUosR0FBV0MsWUFBWCxFQVRNO0FBVWxCUCxJQUFBQSxTQUFTLEVBQVRBO0FBVmtCLEdBQXBCO0FBWUFULEVBQUFBLFFBQVEsQ0FBQ2lCLElBQVQsQ0FBY1AsV0FBZDtBQUNBLFNBQU9WLFFBQVA7QUFDRCxDQWZEO0FBaUJBOzs7Ozs7Ozs7Ozs7Ozs7O0FBZUEsSUFBTWtCLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUIsQ0FBQ1AsRUFBRCxFQUFLUixLQUFMLEVBQVlVLE1BQVosRUFBb0JULEtBQXBCLEVBQTJCQyxLQUEzQixFQUFrQ0MsSUFBbEMsRUFBd0NDLE9BQXhDLEVBQWlEQyxJQUFqRCxFQUF1REMsU0FBdkQsRUFBcUU7QUFDMUYsTUFBTVUsVUFBVSxHQUFHbkIsUUFBUSxDQUFDb0IsSUFBVCxDQUFjLFVBQUFDLElBQUk7QUFBQSxXQUFJQSxJQUFJLENBQUNWLEVBQUwsS0FBWUEsRUFBaEI7QUFBQSxHQUFsQixDQUFuQjtBQUNBUSxFQUFBQSxVQUFVLENBQUNoQixLQUFYLEdBQW1CQSxLQUFLLElBQUlnQixVQUFVLENBQUNoQixLQUF2QztBQUNBZ0IsRUFBQUEsVUFBVSxDQUFDTixNQUFYLEdBQW9CQSxNQUFNLElBQUlNLFVBQVUsQ0FBQ04sTUFBekM7QUFDQU0sRUFBQUEsVUFBVSxDQUFDZixLQUFYLEdBQW1CQSxLQUFLLElBQUllLFVBQVUsQ0FBQ2YsS0FBdkM7QUFDQWUsRUFBQUEsVUFBVSxDQUFDZCxLQUFYLEdBQW1CQSxLQUFLLElBQUljLFVBQVUsQ0FBQ2QsS0FBdkM7QUFDQWMsRUFBQUEsVUFBVSxDQUFDYixJQUFYLEdBQWtCQSxJQUFJLElBQUlhLFVBQVUsQ0FBQ2IsSUFBckM7QUFDQWEsRUFBQUEsVUFBVSxDQUFDWixPQUFYLEdBQXFCQSxPQUFPLElBQUlZLFVBQVUsQ0FBQ1osT0FBM0M7QUFDQVksRUFBQUEsVUFBVSxDQUFDWCxJQUFYLEdBQWtCQSxJQUFJLElBQUlXLFVBQVUsQ0FBQ1gsSUFBckM7QUFDQVcsRUFBQUEsVUFBVSxDQUFDVixTQUFYLEdBQXVCQSxTQUFTLElBQUlVLFVBQVUsQ0FBQ1YsU0FBL0M7QUFDQSxTQUFPVSxVQUFQO0FBQ0QsQ0FYRDtBQWNBOzs7Ozs7OztBQU9BLElBQU1HLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsQ0FBQ1gsRUFBRCxFQUFRO0FBQzlCLE1BQU1ZLEtBQUssR0FBR3ZCLFFBQVEsQ0FBQ3dCLE9BQVQsQ0FBaUJiLEVBQWpCLENBQWQ7QUFDQVgsRUFBQUEsUUFBUSxDQUFDeUIsTUFBVCxDQUFnQkYsS0FBaEIsRUFBdUIsQ0FBdkI7QUFDRCxDQUhEOztlQU1lO0FBQUVyQixFQUFBQSxlQUFlLEVBQWZBLGVBQUY7QUFBbUJnQixFQUFBQSxjQUFjLEVBQWRBLGNBQW5CO0FBQW1DSSxFQUFBQSxlQUFlLEVBQWZBO0FBQW5DLEMiLCJzb3VyY2VSb290IjoiRDpcXFByb3BlcnR5LVByby1MaXRlMVxcc2VydmVyXFxoZWxwZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRhdGFiYXNlIGZyb20gJy4uL21vZGVscy9kYXRhYmFzZSc7XHJcblxyXG5jb25zdCB7IHByb3BlcnR5IH0gPSBkYXRhYmFzZTtcclxuXHJcblxyXG4vKipcclxuICAgKiBDcmVhdGUgYSBuZXcgcHJvcGVydHkuXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IG93bmVyIHRoZSBvd25lciBvZiB0aGUgcHJvcGVydHkgYWQuXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IHN0YXR1cyBjdXJyZW50IHN0YXR1cyBvZiB0aGUgcHJvcGVydHkgYWQsIGUuZyBhdmFpbGFibGUvc29sZC5cclxuICAgKiBAcGFyYW0ge29iamVjdH0gcHJpY2UgdGhlIHByaWNlIG9mIHRoZSBwcm9wZXJ0eSBhZC5cclxuICAgKiBAcGFyYW0ge29iamVjdH0gc3RhdGUgdGhlIHN0YXRlIGxvY2F0aW9uIG9mIHRoZSBwcm9wZXJ0eSBhZC5cclxuICAgKiBAcGFyYW0ge29iamVjdH0gY2l0eSB0aGUgY2l0eSBsb2NhdGlvbiBvZiB0aGUgcHJvcGVydHkgYWQuXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IGFkZHJlc3MgdGhlIGFkZHJlc3MgbG9jYXRpb24gb2YgdGhlIHByb3BlcnR5IGFkLlxyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSB0eXBlIHRoZSB0eXBlIG9mIHRoZSBwcm9wZXJ0eSBhZCwgZS5nIDIgYmVkcm9vbS5cclxuICAgKiBAcGFyYW0ge29iamVjdH0gY3JlYXRlZF9vbiB0aGUgZGF0ZSB0aGUgcHJvcGVydHkgYWQgd2FzIHBvc3RlZC5cclxuICAgKiBAcGFyYW0ge29iamVjdH0gaW1hZ2VfdXJsIHRoZSBpbWFnZSB1cmwgb2YgdGhlIHByb3BlcnR5IGFkLlxyXG4gICAqIEByZXR1cm4gIHtGdW5jdGlvbn0gbmV4dCBjYWxscyB0aGUgbmV4dCBtaWRkbGV3YXJlXHJcbiAgICpcclxuICAgKi9cclxuXHJcbmNvbnN0IHNhdmVOZXdQcm9wZXJ0eSA9IChvd25lciwgcHJpY2UsIHN0YXRlLCBjaXR5LCBhZGRyZXNzLCB0eXBlLCBpbWFnZV91cmwpID0+IHtcclxuICBjb25zdCBuZXdQcm9wZXJ0eSA9IHtcclxuICAgIGlkOiBwcm9wZXJ0eS5sZW5ndGggKyAxLFxyXG4gICAgb3duZXIsXHJcbiAgICBzdGF0dXM6ICdhdmFpbGFibGUnLFxyXG4gICAgcHJpY2UsXHJcbiAgICBzdGF0ZSxcclxuICAgIGNpdHksXHJcbiAgICBhZGRyZXNzLFxyXG4gICAgdHlwZSxcclxuICAgIGNyZWF0ZWRfb246IG5ldyBEYXRlKCkudG9EYXRlU3RyaW5nKCksXHJcbiAgICBpbWFnZV91cmwsXHJcbiAgfTtcclxuICBwcm9wZXJ0eS5wdXNoKG5ld1Byb3BlcnR5KTtcclxuICByZXR1cm4gcHJvcGVydHk7XHJcbn07XHJcblxyXG4vKipcclxuICAgKiBVcGRhdGUgZXhpc3RpbmcgcHJvcGVydHkuXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IG93bmVyIHRoZSBvd25lciBvZiB0aGUgcHJvcGVydHkgYWQuXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IHN0YXR1cyBjdXJyZW50IHN0YXR1cyBvZiB0aGUgcHJvcGVydHkgYWQsIGUuZyBhdmFpbGFibGUvc29sZC5cclxuICAgKiBAcGFyYW0ge29iamVjdH0gcHJpY2UgdGhlIHByaWNlIG9mIHRoZSBwcm9wZXJ0eSBhZC5cclxuICAgKiBAcGFyYW0ge29iamVjdH0gc3RhdGUgdGhlIHN0YXRlIGxvY2F0aW9uIG9mIHRoZSBwcm9wZXJ0eSBhZC5cclxuICAgKiBAcGFyYW0ge29iamVjdH0gY2l0eSB0aGUgY2l0eSBsb2NhdGlvbiBvZiB0aGUgcHJvcGVydHkgYWQuXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IGFkZHJlc3MgdGhlIGFkZHJlc3MgbG9jYXRpb24gb2YgdGhlIHByb3BlcnR5IGFkLlxyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSB0eXBlIHRoZSB0eXBlIG9mIHRoZSBwcm9wZXJ0eSBhZCwgZS5nIDIgYmVkcm9vbS5cclxuICAgKiBAcGFyYW0ge29iamVjdH0gY3JlYXRlZF9vbiB0aGUgZGF0ZSB0aGUgcHJvcGVydHkgYWQgd2FzIHBvc3RlZC5cclxuICAgKiBAcGFyYW0ge29iamVjdH0gaW1hZ2VfdXJsIHRoZSBpbWFnZSB1cmwgb2YgdGhlIHByb3BlcnR5IGFkLlxyXG4gICAqIEByZXR1cm4gIHtGdW5jdGlvbn0gbmV4dCBjYWxscyB0aGUgbmV4dCBtaWRkbGV3YXJlXHJcbiAgICpcclxuICAgKi9cclxuXHJcbmNvbnN0IHVwZGF0ZVByb3BlcnR5ID0gKGlkLCBvd25lciwgc3RhdHVzLCBwcmljZSwgc3RhdGUsIGNpdHksIGFkZHJlc3MsIHR5cGUsIGltYWdlX3VybCkgPT4ge1xyXG4gIGNvbnN0IHByb3BlcnR5SWQgPSBwcm9wZXJ0eS5maW5kKHByb3AgPT4gcHJvcC5pZCA9PT0gaWQpO1xyXG4gIHByb3BlcnR5SWQub3duZXIgPSBvd25lciB8fCBwcm9wZXJ0eUlkLm93bmVyO1xyXG4gIHByb3BlcnR5SWQuc3RhdHVzID0gc3RhdHVzIHx8IHByb3BlcnR5SWQuc3RhdHVzO1xyXG4gIHByb3BlcnR5SWQucHJpY2UgPSBwcmljZSB8fCBwcm9wZXJ0eUlkLnByaWNlO1xyXG4gIHByb3BlcnR5SWQuc3RhdGUgPSBzdGF0ZSB8fCBwcm9wZXJ0eUlkLnN0YXRlO1xyXG4gIHByb3BlcnR5SWQuY2l0eSA9IGNpdHkgfHwgcHJvcGVydHlJZC5jaXR5O1xyXG4gIHByb3BlcnR5SWQuYWRkcmVzcyA9IGFkZHJlc3MgfHwgcHJvcGVydHlJZC5hZGRyZXNzO1xyXG4gIHByb3BlcnR5SWQudHlwZSA9IHR5cGUgfHwgcHJvcGVydHlJZC50eXBlO1xyXG4gIHByb3BlcnR5SWQuaW1hZ2VfdXJsID0gaW1hZ2VfdXJsIHx8IHByb3BlcnR5SWQuaW1hZ2VfdXJsO1xyXG4gIHJldHVybiBwcm9wZXJ0eUlkO1xyXG59O1xyXG5cclxuXHJcbi8qKlxyXG4gICAqIERlbGV0ZSBleGlzdGluZyBwcm9wZXJ0eS5cclxuICAgKiBAcGFyYW0ge29iamVjdH0gaWQgdGhlIGlkIG9mIHRoZSBwcm9wZXJ0eSBhZCB0byBiZSBkZWxldGVkLlxyXG4gICAqIEByZXR1cm4gIHtGdW5jdGlvbn0gbmV4dCBjYWxscyB0aGUgbmV4dCBtaWRkbGV3YXJlXHJcbiAgICpcclxuICAgKi9cclxuXHJcbmNvbnN0IGRlbGV0ZXNQcm9wZXJ0eSA9IChpZCkgPT4ge1xyXG4gIGNvbnN0IGluZGV4ID0gcHJvcGVydHkuaW5kZXhPZihpZCk7XHJcbiAgcHJvcGVydHkuc3BsaWNlKGluZGV4LCAxKTtcclxufTtcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7IHNhdmVOZXdQcm9wZXJ0eSwgdXBkYXRlUHJvcGVydHksIGRlbGV0ZXNQcm9wZXJ0eSB9O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "propertyHelper.js"
      ],
      "names": [
        "property",
        "database",
        "saveNewProperty",
        "owner",
        "price",
        "state",
        "city",
        "address",
        "type",
        "image_url",
        "newProperty",
        "id",
        "length",
        "status",
        "created_on",
        "Date",
        "toDateString",
        "push",
        "updateProperty",
        "propertyId",
        "find",
        "prop",
        "deletesProperty",
        "index",
        "indexOf",
        "splice"
      ],
      "mappings": ";;;;;;;AAAA;;;;IAEQA,Q,GAAaC,oB,CAAbD,Q;AAGR;;;;;;;;;;;;;;;AAeA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,OAA5B,EAAqCC,IAArC,EAA2CC,SAA3C,EAAyD;AAC/E,MAAMC,WAAW,GAAG;AAClBC,IAAAA,EAAE,EAAEX,QAAQ,CAACY,MAAT,GAAkB,CADJ;AAElBT,IAAAA,KAAK,EAALA,KAFkB;AAGlBU,IAAAA,MAAM,EAAE,WAHU;AAIlBT,IAAAA,KAAK,EAALA,KAJkB;AAKlBC,IAAAA,KAAK,EAALA,KALkB;AAMlBC,IAAAA,IAAI,EAAJA,IANkB;AAOlBC,IAAAA,OAAO,EAAPA,OAPkB;AAQlBC,IAAAA,IAAI,EAAJA,IARkB;AASlBM,IAAAA,UAAU,EAAE,IAAIC,IAAJ,GAAWC,YAAX,EATM;AAUlBP,IAAAA,SAAS,EAATA;AAVkB,GAApB;AAYAT,EAAAA,QAAQ,CAACiB,IAAT,CAAcP,WAAd;AACA,SAAOV,QAAP;AACD,CAfD;AAiBA;;;;;;;;;;;;;;;;AAeA,IAAMkB,cAAc,GAAG,SAAjBA,cAAiB,CAACP,EAAD,EAAKR,KAAL,EAAYU,MAAZ,EAAoBT,KAApB,EAA2BC,KAA3B,EAAkCC,IAAlC,EAAwCC,OAAxC,EAAiDC,IAAjD,EAAuDC,SAAvD,EAAqE;AAC1F,MAAMU,UAAU,GAAGnB,QAAQ,CAACoB,IAAT,CAAc,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACV,EAAL,KAAYA,EAAhB;AAAA,GAAlB,CAAnB;AACAQ,EAAAA,UAAU,CAAChB,KAAX,GAAmBA,KAAK,IAAIgB,UAAU,CAAChB,KAAvC;AACAgB,EAAAA,UAAU,CAACN,MAAX,GAAoBA,MAAM,IAAIM,UAAU,CAACN,MAAzC;AACAM,EAAAA,UAAU,CAACf,KAAX,GAAmBA,KAAK,IAAIe,UAAU,CAACf,KAAvC;AACAe,EAAAA,UAAU,CAACd,KAAX,GAAmBA,KAAK,IAAIc,UAAU,CAACd,KAAvC;AACAc,EAAAA,UAAU,CAACb,IAAX,GAAkBA,IAAI,IAAIa,UAAU,CAACb,IAArC;AACAa,EAAAA,UAAU,CAACZ,OAAX,GAAqBA,OAAO,IAAIY,UAAU,CAACZ,OAA3C;AACAY,EAAAA,UAAU,CAACX,IAAX,GAAkBA,IAAI,IAAIW,UAAU,CAACX,IAArC;AACAW,EAAAA,UAAU,CAACV,SAAX,GAAuBA,SAAS,IAAIU,UAAU,CAACV,SAA/C;AACA,SAAOU,UAAP;AACD,CAXD;AAcA;;;;;;;;AAOA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACX,EAAD,EAAQ;AAC9B,MAAMY,KAAK,GAAGvB,QAAQ,CAACwB,OAAT,CAAiBb,EAAjB,CAAd;AACAX,EAAAA,QAAQ,CAACyB,MAAT,CAAgBF,KAAhB,EAAuB,CAAvB;AACD,CAHD;;eAMe;AAAErB,EAAAA,eAAe,EAAfA,eAAF;AAAmBgB,EAAAA,cAAc,EAAdA,cAAnB;AAAmCI,EAAAA,eAAe,EAAfA;AAAnC,C",
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
      "sourcesContent": [
        "import database from '../models/database';\r\n\r\nconst { property } = database;\r\n\r\n\r\n/**\r\n   * Create a new property.\r\n   * @param {object} owner the owner of the property ad.\r\n   * @param {object} status current status of the property ad, e.g available/sold.\r\n   * @param {object} price the price of the property ad.\r\n   * @param {object} state the state location of the property ad.\r\n   * @param {object} city the city location of the property ad.\r\n   * @param {object} address the address location of the property ad.\r\n   * @param {object} type the type of the property ad, e.g 2 bedroom.\r\n   * @param {object} created_on the date the property ad was posted.\r\n   * @param {object} image_url the image url of the property ad.\r\n   * @return  {Function} next calls the next middleware\r\n   *\r\n   */\r\n\r\nconst saveNewProperty = (owner, price, state, city, address, type, image_url) => {\r\n  const newProperty = {\r\n    id: property.length + 1,\r\n    owner,\r\n    status: 'available',\r\n    price,\r\n    state,\r\n    city,\r\n    address,\r\n    type,\r\n    created_on: new Date().toDateString(),\r\n    image_url,\r\n  };\r\n  property.push(newProperty);\r\n  return property;\r\n};\r\n\r\n/**\r\n   * Update existing property.\r\n   * @param {object} owner the owner of the property ad.\r\n   * @param {object} status current status of the property ad, e.g available/sold.\r\n   * @param {object} price the price of the property ad.\r\n   * @param {object} state the state location of the property ad.\r\n   * @param {object} city the city location of the property ad.\r\n   * @param {object} address the address location of the property ad.\r\n   * @param {object} type the type of the property ad, e.g 2 bedroom.\r\n   * @param {object} created_on the date the property ad was posted.\r\n   * @param {object} image_url the image url of the property ad.\r\n   * @return  {Function} next calls the next middleware\r\n   *\r\n   */\r\n\r\nconst updateProperty = (id, owner, status, price, state, city, address, type, image_url) => {\r\n  const propertyId = property.find(prop => prop.id === id);\r\n  propertyId.owner = owner || propertyId.owner;\r\n  propertyId.status = status || propertyId.status;\r\n  propertyId.price = price || propertyId.price;\r\n  propertyId.state = state || propertyId.state;\r\n  propertyId.city = city || propertyId.city;\r\n  propertyId.address = address || propertyId.address;\r\n  propertyId.type = type || propertyId.type;\r\n  propertyId.image_url = image_url || propertyId.image_url;\r\n  return propertyId;\r\n};\r\n\r\n\r\n/**\r\n   * Delete existing property.\r\n   * @param {object} id the id of the property ad to be deleted.\r\n   * @return  {Function} next calls the next middleware\r\n   *\r\n   */\r\n\r\nconst deletesProperty = (id) => {\r\n  const index = property.indexOf(id);\r\n  property.splice(index, 1);\r\n};\r\n\r\n\r\nexport default { saveNewProperty, updateProperty, deletesProperty };\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562973424197
  },
  "{\"sourceRoot\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\helpers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Property-Pro-Lite1\",\"filename\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\helpers\\\\getProperty.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Property-Pro-Lite1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Property-Pro-Lite1",
      "filename": "D:\\Property-Pro-Lite1\\server\\helpers\\getProperty.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Property-Pro-Lite1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Property-Pro-Lite1\\server\\helpers\\getProperty.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Property-Pro-Lite1\\server\\helpers\\getProperty.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
        "sourceFileName": "getProperty.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar getProps = function getProps(data, res, errMsg) {\n  if (data !== undefined) {\n    return res.status(200).send({\n      status: 'success',\n      data: {\n        message: 'Property successfully retrieved',\n        data: data\n      }\n    });\n  }\n\n  return res.status(400).send({\n    status: 'error',\n    error: errMsg\n  });\n};\n\nvar _default = getProps;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldFByb3BlcnR5LmpzIl0sIm5hbWVzIjpbImdldFByb3BzIiwiZGF0YSIsInJlcyIsImVyck1zZyIsInVuZGVmaW5lZCIsInN0YXR1cyIsInNlbmQiLCJtZXNzYWdlIiwiZXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFNQSxRQUFRLEdBQUcsU0FBWEEsUUFBVyxDQUFDQyxJQUFELEVBQU9DLEdBQVAsRUFBWUMsTUFBWixFQUF1QjtBQUN0QyxNQUFJRixJQUFJLEtBQUtHLFNBQWIsRUFBd0I7QUFDdEIsV0FBT0YsR0FBRyxDQUFDRyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDMUJELE1BQUFBLE1BQU0sRUFBRSxTQURrQjtBQUUxQkosTUFBQUEsSUFBSSxFQUFFO0FBQ0pNLFFBQUFBLE9BQU8sRUFBRSxpQ0FETDtBQUVKTixRQUFBQSxJQUFJLEVBQUpBO0FBRkk7QUFGb0IsS0FBckIsQ0FBUDtBQU9EOztBQUNELFNBQU9DLEdBQUcsQ0FBQ0csTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQzFCRCxJQUFBQSxNQUFNLEVBQUUsT0FEa0I7QUFFMUJHLElBQUFBLEtBQUssRUFBRUw7QUFGbUIsR0FBckIsQ0FBUDtBQUlELENBZEQ7O2VBZ0JlSCxRIiwic291cmNlUm9vdCI6IkQ6XFxQcm9wZXJ0eS1Qcm8tTGl0ZTFcXHNlcnZlclxcaGVscGVycyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGdldFByb3BzID0gKGRhdGEsIHJlcywgZXJyTXNnKSA9PiB7XHJcbiAgaWYgKGRhdGEgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHtcclxuICAgICAgc3RhdHVzOiAnc3VjY2VzcycsXHJcbiAgICAgIGRhdGE6IHtcclxuICAgICAgICBtZXNzYWdlOiAnUHJvcGVydHkgc3VjY2Vzc2Z1bGx5IHJldHJpZXZlZCcsXHJcbiAgICAgICAgZGF0YVxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbiAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHtcclxuICAgIHN0YXR1czogJ2Vycm9yJyxcclxuICAgIGVycm9yOiBlcnJNc2csXHJcbiAgfSk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBnZXRQcm9wcztcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "getProperty.js"
      ],
      "names": [
        "getProps",
        "data",
        "res",
        "errMsg",
        "undefined",
        "status",
        "send",
        "message",
        "error"
      ],
      "mappings": ";;;;;;;AAAA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAOC,GAAP,EAAYC,MAAZ,EAAuB;AACtC,MAAIF,IAAI,KAAKG,SAAb,EAAwB;AACtB,WAAOF,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,MAAAA,MAAM,EAAE,SADkB;AAE1BJ,MAAAA,IAAI,EAAE;AACJM,QAAAA,OAAO,EAAE,iCADL;AAEJN,QAAAA,IAAI,EAAJA;AAFI;AAFoB,KAArB,CAAP;AAOD;;AACD,SAAOC,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,IAAAA,MAAM,EAAE,OADkB;AAE1BG,IAAAA,KAAK,EAAEL;AAFmB,GAArB,CAAP;AAID,CAdD;;eAgBeH,Q",
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
      "sourcesContent": [
        "const getProps = (data, res, errMsg) => {\r\n  if (data !== undefined) {\r\n    return res.status(200).send({\r\n      status: 'success',\r\n      data: {\r\n        message: 'Property successfully retrieved',\r\n        data\r\n      }\r\n    });\r\n  }\r\n  return res.status(400).send({\r\n    status: 'error',\r\n    error: errMsg,\r\n  });\r\n};\r\n\r\nexport default getProps;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562966179878
  },
  "{\"sourceRoot\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\helpers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Property-Pro-Lite1\",\"filename\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\helpers\\\\errorHelper.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Property-Pro-Lite1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Property-Pro-Lite1",
      "filename": "D:\\Property-Pro-Lite1\\server\\helpers\\errorHelper.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Property-Pro-Lite1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Property-Pro-Lite1\\server\\helpers\\errorHelper.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Property-Pro-Lite1\\server\\helpers\\errorHelper.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
        "sourceFileName": "errorHelper.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _expressValidator = require(\"express-validator\");\n\n/**\r\n * Auth Error helper.\r\n * @param {object} res the response object.\r\n *\r\n*/\nvar authError = function authError(res) {\n  return res.status(400).send({\n    status: 'error',\n    message: 'Invalid credentials'\n  });\n};\n/**\r\n * Input Error helper.\r\n * @param {object} req the request object.\r\n * @param {object} res the response object.\r\n *\r\n*/\n\n\nvar inputError = function inputError(req, res) {\n  var errors = (0, _expressValidator.validationResult)(req);\n\n  if (!errors.isEmpty()) {\n    return res.status(400).send({\n      status: 'error',\n      errorMsg: errors.array()\n    });\n  }\n};\n\nvar userExists = function userExists(data, res) {\n  if (data !== undefined) {\n    return res.status(400).send({\n      status: 'error',\n      data: {\n        message: 'User already exists, kindly login'\n      }\n    });\n  }\n};\n\nvar _default = {\n  authError: authError,\n  inputError: inputError,\n  userExists: userExists\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVycm9ySGVscGVyLmpzIl0sIm5hbWVzIjpbImF1dGhFcnJvciIsInJlcyIsInN0YXR1cyIsInNlbmQiLCJtZXNzYWdlIiwiaW5wdXRFcnJvciIsInJlcSIsImVycm9ycyIsImlzRW1wdHkiLCJlcnJvck1zZyIsImFycmF5IiwidXNlckV4aXN0cyIsImRhdGEiLCJ1bmRlZmluZWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7Ozs7QUFNQSxJQUFNQSxTQUFTLEdBQUcsU0FBWkEsU0FBWSxDQUFBQyxHQUFHO0FBQUEsU0FBSUEsR0FBRyxDQUFDQyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDNUNELElBQUFBLE1BQU0sRUFBRSxPQURvQztBQUU1Q0UsSUFBQUEsT0FBTyxFQUFFO0FBRm1DLEdBQXJCLENBQUo7QUFBQSxDQUFyQjtBQUtBOzs7Ozs7OztBQU9BLElBQU1DLFVBQVUsR0FBRyxTQUFiQSxVQUFhLENBQUNDLEdBQUQsRUFBTUwsR0FBTixFQUFjO0FBQy9CLE1BQU1NLE1BQU0sR0FBRyx3Q0FBaUJELEdBQWpCLENBQWY7O0FBQ0EsTUFBSSxDQUFDQyxNQUFNLENBQUNDLE9BQVAsRUFBTCxFQUF1QjtBQUNyQixXQUFPUCxHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMxQkQsTUFBQUEsTUFBTSxFQUFFLE9BRGtCO0FBRTFCTyxNQUFBQSxRQUFRLEVBQUVGLE1BQU0sQ0FBQ0csS0FBUDtBQUZnQixLQUFyQixDQUFQO0FBSUQ7QUFDRixDQVJEOztBQVVBLElBQU1DLFVBQVUsR0FBRyxTQUFiQSxVQUFhLENBQUNDLElBQUQsRUFBT1gsR0FBUCxFQUFlO0FBQ2hDLE1BQUlXLElBQUksS0FBS0MsU0FBYixFQUF3QjtBQUN0QixXQUFPWixHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMxQkQsTUFBQUEsTUFBTSxFQUFFLE9BRGtCO0FBRTFCVSxNQUFBQSxJQUFJLEVBQUU7QUFDSlIsUUFBQUEsT0FBTyxFQUFFO0FBREw7QUFGb0IsS0FBckIsQ0FBUDtBQU1EO0FBQ0YsQ0FURDs7ZUFXZTtBQUFFSixFQUFBQSxTQUFTLEVBQVRBLFNBQUY7QUFBYUssRUFBQUEsVUFBVSxFQUFWQSxVQUFiO0FBQXlCTSxFQUFBQSxVQUFVLEVBQVZBO0FBQXpCLEMiLCJzb3VyY2VSb290IjoiRDpcXFByb3BlcnR5LVByby1MaXRlMVxcc2VydmVyXFxoZWxwZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdmFsaWRhdGlvblJlc3VsdCB9IGZyb20gJ2V4cHJlc3MtdmFsaWRhdG9yJztcclxuXHJcbi8qKlxyXG4gKiBBdXRoIEVycm9yIGhlbHBlci5cclxuICogQHBhcmFtIHtvYmplY3R9IHJlcyB0aGUgcmVzcG9uc2Ugb2JqZWN0LlxyXG4gKlxyXG4qL1xyXG5cclxuY29uc3QgYXV0aEVycm9yID0gcmVzID0+IHJlcy5zdGF0dXMoNDAwKS5zZW5kKHtcclxuICBzdGF0dXM6ICdlcnJvcicsXHJcbiAgbWVzc2FnZTogJ0ludmFsaWQgY3JlZGVudGlhbHMnXHJcbn0pO1xyXG5cclxuLyoqXHJcbiAqIElucHV0IEVycm9yIGhlbHBlci5cclxuICogQHBhcmFtIHtvYmplY3R9IHJlcSB0aGUgcmVxdWVzdCBvYmplY3QuXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSByZXMgdGhlIHJlc3BvbnNlIG9iamVjdC5cclxuICpcclxuKi9cclxuXHJcbmNvbnN0IGlucHV0RXJyb3IgPSAocmVxLCByZXMpID0+IHtcclxuICBjb25zdCBlcnJvcnMgPSB2YWxpZGF0aW9uUmVzdWx0KHJlcSk7XHJcbiAgaWYgKCFlcnJvcnMuaXNFbXB0eSgpKSB7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLnNlbmQoe1xyXG4gICAgICBzdGF0dXM6ICdlcnJvcicsXHJcbiAgICAgIGVycm9yTXNnOiBlcnJvcnMuYXJyYXkoKSxcclxuICAgIH0pO1xyXG4gIH1cclxufTtcclxuXHJcbmNvbnN0IHVzZXJFeGlzdHMgPSAoZGF0YSwgcmVzKSA9PiB7XHJcbiAgaWYgKGRhdGEgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHtcclxuICAgICAgc3RhdHVzOiAnZXJyb3InLFxyXG4gICAgICBkYXRhOiB7XHJcbiAgICAgICAgbWVzc2FnZTogJ1VzZXIgYWxyZWFkeSBleGlzdHMsIGtpbmRseSBsb2dpbidcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgeyBhdXRoRXJyb3IsIGlucHV0RXJyb3IsIHVzZXJFeGlzdHMgfTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "errorHelper.js"
      ],
      "names": [
        "authError",
        "res",
        "status",
        "send",
        "message",
        "inputError",
        "req",
        "errors",
        "isEmpty",
        "errorMsg",
        "array",
        "userExists",
        "data",
        "undefined"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;;;;AAMA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAAAC,GAAG;AAAA,SAAIA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC5CD,IAAAA,MAAM,EAAE,OADoC;AAE5CE,IAAAA,OAAO,EAAE;AAFmC,GAArB,CAAJ;AAAA,CAArB;AAKA;;;;;;;;AAOA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAML,GAAN,EAAc;AAC/B,MAAMM,MAAM,GAAG,wCAAiBD,GAAjB,CAAf;;AACA,MAAI,CAACC,MAAM,CAACC,OAAP,EAAL,EAAuB;AACrB,WAAOP,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,MAAAA,MAAM,EAAE,OADkB;AAE1BO,MAAAA,QAAQ,EAAEF,MAAM,CAACG,KAAP;AAFgB,KAArB,CAAP;AAID;AACF,CARD;;AAUA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAOX,GAAP,EAAe;AAChC,MAAIW,IAAI,KAAKC,SAAb,EAAwB;AACtB,WAAOZ,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,MAAAA,MAAM,EAAE,OADkB;AAE1BU,MAAAA,IAAI,EAAE;AACJR,QAAAA,OAAO,EAAE;AADL;AAFoB,KAArB,CAAP;AAMD;AACF,CATD;;eAWe;AAAEJ,EAAAA,SAAS,EAATA,SAAF;AAAaK,EAAAA,UAAU,EAAVA,UAAb;AAAyBM,EAAAA,UAAU,EAAVA;AAAzB,C",
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
      "sourcesContent": [
        "import { validationResult } from 'express-validator';\r\n\r\n/**\r\n * Auth Error helper.\r\n * @param {object} res the response object.\r\n *\r\n*/\r\n\r\nconst authError = res => res.status(400).send({\r\n  status: 'error',\r\n  message: 'Invalid credentials'\r\n});\r\n\r\n/**\r\n * Input Error helper.\r\n * @param {object} req the request object.\r\n * @param {object} res the response object.\r\n *\r\n*/\r\n\r\nconst inputError = (req, res) => {\r\n  const errors = validationResult(req);\r\n  if (!errors.isEmpty()) {\r\n    return res.status(400).send({\r\n      status: 'error',\r\n      errorMsg: errors.array(),\r\n    });\r\n  }\r\n};\r\n\r\nconst userExists = (data, res) => {\r\n  if (data !== undefined) {\r\n    return res.status(400).send({\r\n      status: 'error',\r\n      data: {\r\n        message: 'User already exists, kindly login'\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport default { authError, inputError, userExists };\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562923604598
  },
  "{\"sourceRoot\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\helpers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Property-Pro-Lite1\",\"filename\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\helpers\\\\cloudinary.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Property-Pro-Lite1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Property-Pro-Lite1",
      "filename": "D:\\Property-Pro-Lite1\\server\\helpers\\cloudinary.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Property-Pro-Lite1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Property-Pro-Lite1\\server\\helpers\\cloudinary.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Property-Pro-Lite1\\server\\helpers\\cloudinary.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
        "sourceFileName": "cloudinary.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _cloudinary = _interopRequireDefault(require(\"cloudinary\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar cloudinary = _cloudinary[\"default\"].v2;\nvar imgUri, errMsg;\ncloudinary.config({\n  cloud_name: 'pacifique',\n  api_key: '',\n  api_secret: ''\n});\n/**\r\n * Create/POST a property ad.\r\n * @param {object} img the request object.\r\n * @return  {Function} returns to the caller\r\n *\r\n*/\n\nvar imageUpload =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(img) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('** ** ** Image Upload ** ** **');\n            _context.prev = 1;\n            _context.next = 4;\n            return cloudinary.uploader.upload(img, {\n              tags: 'sample'\n            }, function (err, image) {\n              if (err) {\n                console.log(\"error: \".concat(err));\n                errMsg = err;\n                return err;\n              }\n\n              console.log('** File Upload complete**');\n              imgUri = image.url;\n            });\n\n          case 4:\n            return _context.abrupt(\"return\", imgUri || errMsg);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0.Error);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 7]]);\n  }));\n\n  return function imageUpload(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = imageUpload;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsb3VkaW5hcnkuanMiXSwibmFtZXMiOlsiY2xvdWRpbmFyeSIsImNsb3VkIiwidjIiLCJpbWdVcmkiLCJlcnJNc2ciLCJjb25maWciLCJjbG91ZF9uYW1lIiwiYXBpX2tleSIsImFwaV9zZWNyZXQiLCJpbWFnZVVwbG9hZCIsImltZyIsImNvbnNvbGUiLCJsb2ciLCJ1cGxvYWRlciIsInVwbG9hZCIsInRhZ3MiLCJlcnIiLCJpbWFnZSIsInVybCIsIkVycm9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7O0FBRUEsSUFBTUEsVUFBVSxHQUFHQyx1QkFBTUMsRUFBekI7QUFDQSxJQUFJQyxNQUFKLEVBQVlDLE1BQVo7QUFFQUosVUFBVSxDQUFDSyxNQUFYLENBQWtCO0FBQ2hCQyxFQUFBQSxVQUFVLEVBQUUsV0FESTtBQUVoQkMsRUFBQUEsT0FBTyxFQUFFLEVBRk87QUFHaEJDLEVBQUFBLFVBQVUsRUFBRTtBQUhJLENBQWxCO0FBTUE7Ozs7Ozs7QUFNQSxJQUFNQyxXQUFXO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFBRyxpQkFBT0MsR0FBUDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2xCQyxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxnQ0FBWjtBQURrQjtBQUFBO0FBQUEsbUJBR1ZaLFVBQVUsQ0FBQ2EsUUFBWCxDQUFvQkMsTUFBcEIsQ0FBMkJKLEdBQTNCLEVBQWdDO0FBQUVLLGNBQUFBLElBQUksRUFBRTtBQUFSLGFBQWhDLEVBQW9ELFVBQUNDLEdBQUQsRUFBTUMsS0FBTixFQUFnQjtBQUN4RSxrQkFBSUQsR0FBSixFQUFTO0FBQUVMLGdCQUFBQSxPQUFPLENBQUNDLEdBQVIsa0JBQXNCSSxHQUF0QjtBQUE4QlosZ0JBQUFBLE1BQU0sR0FBR1ksR0FBVDtBQUFjLHVCQUFPQSxHQUFQO0FBQWE7O0FBQ3BFTCxjQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwyQkFBWjtBQUNBVCxjQUFBQSxNQUFNLEdBQUdjLEtBQUssQ0FBQ0MsR0FBZjtBQUNELGFBSkssQ0FIVTs7QUFBQTtBQUFBLDZDQVFUZixNQUFNLElBQUlDLE1BUkQ7O0FBQUE7QUFBQTtBQUFBO0FBVWhCTyxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxZQUFJTyxLQUFoQjs7QUFWZ0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBSDs7QUFBQSxrQkFBWFYsV0FBVztBQUFBO0FBQUE7QUFBQSxHQUFqQjs7ZUFjZUEsVyIsInNvdXJjZVJvb3QiOiJEOlxcUHJvcGVydHktUHJvLUxpdGUxXFxzZXJ2ZXJcXGhlbHBlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2xvdWQgZnJvbSAnY2xvdWRpbmFyeSc7XHJcblxyXG5jb25zdCBjbG91ZGluYXJ5ID0gY2xvdWQudjI7XHJcbmxldCBpbWdVcmksIGVyck1zZztcclxuXHJcbmNsb3VkaW5hcnkuY29uZmlnKHtcclxuICBjbG91ZF9uYW1lOiAncGFjaWZpcXVlJyxcclxuICBhcGlfa2V5OiAnJyxcclxuICBhcGlfc2VjcmV0OiAnJ1xyXG59KTtcclxuXHJcbi8qKlxyXG4gKiBDcmVhdGUvUE9TVCBhIHByb3BlcnR5IGFkLlxyXG4gKiBAcGFyYW0ge29iamVjdH0gaW1nIHRoZSByZXF1ZXN0IG9iamVjdC5cclxuICogQHJldHVybiAge0Z1bmN0aW9ufSByZXR1cm5zIHRvIHRoZSBjYWxsZXJcclxuICpcclxuKi9cclxuY29uc3QgaW1hZ2VVcGxvYWQgPSBhc3luYyAoaW1nKSA9PiB7XHJcbiAgY29uc29sZS5sb2coJyoqICoqICoqIEltYWdlIFVwbG9hZCAqKiAqKiAqKicpO1xyXG4gIHRyeSB7XHJcbiAgICBhd2FpdCBjbG91ZGluYXJ5LnVwbG9hZGVyLnVwbG9hZChpbWcsIHsgdGFnczogJ3NhbXBsZScgfSwgKGVyciwgaW1hZ2UpID0+IHtcclxuICAgICAgaWYgKGVycikgeyBjb25zb2xlLmxvZyhgZXJyb3I6ICR7ZXJyfWApOyBlcnJNc2cgPSBlcnI7IHJldHVybiBlcnI7IH1cclxuICAgICAgY29uc29sZS5sb2coJyoqIEZpbGUgVXBsb2FkIGNvbXBsZXRlKionKTtcclxuICAgICAgaW1nVXJpID0gaW1hZ2UudXJsO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gaW1nVXJpIHx8IGVyck1zZztcclxuICB9IGNhdGNoIChlcnIpIHtcclxuICAgIGNvbnNvbGUubG9nKGVyci5FcnJvcik7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgaW1hZ2VVcGxvYWQ7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "cloudinary.js"
      ],
      "names": [
        "cloudinary",
        "cloud",
        "v2",
        "imgUri",
        "errMsg",
        "config",
        "cloud_name",
        "api_key",
        "api_secret",
        "imageUpload",
        "img",
        "console",
        "log",
        "uploader",
        "upload",
        "tags",
        "err",
        "image",
        "url",
        "Error"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;AAEA,IAAMA,UAAU,GAAGC,uBAAMC,EAAzB;AACA,IAAIC,MAAJ,EAAYC,MAAZ;AAEAJ,UAAU,CAACK,MAAX,CAAkB;AAChBC,EAAAA,UAAU,EAAE,WADI;AAEhBC,EAAAA,OAAO,EAAE,EAFO;AAGhBC,EAAAA,UAAU,EAAE;AAHI,CAAlB;AAMA;;;;;;;AAMA,IAAMC,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAClBC,YAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AADkB;AAAA;AAAA,mBAGVZ,UAAU,CAACa,QAAX,CAAoBC,MAApB,CAA2BJ,GAA3B,EAAgC;AAAEK,cAAAA,IAAI,EAAE;AAAR,aAAhC,EAAoD,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACxE,kBAAID,GAAJ,EAAS;AAAEL,gBAAAA,OAAO,CAACC,GAAR,kBAAsBI,GAAtB;AAA8BZ,gBAAAA,MAAM,GAAGY,GAAT;AAAc,uBAAOA,GAAP;AAAa;;AACpEL,cAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAT,cAAAA,MAAM,GAAGc,KAAK,CAACC,GAAf;AACD,aAJK,CAHU;;AAAA;AAAA,6CAQTf,MAAM,IAAIC,MARD;;AAAA;AAAA;AAAA;AAUhBO,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAIO,KAAhB;;AAVgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXV,WAAW;AAAA;AAAA;AAAA,GAAjB;;eAceA,W",
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
      "sourcesContent": [
        "import cloud from 'cloudinary';\r\n\r\nconst cloudinary = cloud.v2;\r\nlet imgUri, errMsg;\r\n\r\ncloudinary.config({\r\n  cloud_name: 'pacifique',\r\n  api_key: '',\r\n  api_secret: ''\r\n});\r\n\r\n/**\r\n * Create/POST a property ad.\r\n * @param {object} img the request object.\r\n * @return  {Function} returns to the caller\r\n *\r\n*/\r\nconst imageUpload = async (img) => {\r\n  console.log('** ** ** Image Upload ** ** **');\r\n  try {\r\n    await cloudinary.uploader.upload(img, { tags: 'sample' }, (err, image) => {\r\n      if (err) { console.log(`error: ${err}`); errMsg = err; return err; }\r\n      console.log('** File Upload complete**');\r\n      imgUri = image.url;\r\n    });\r\n    return imgUri || errMsg;\r\n  } catch (err) {\r\n    console.log(err.Error);\r\n  }\r\n};\r\n\r\nexport default imageUpload;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562968190389
  },
  "{\"sourceRoot\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Property-Pro-Lite1\",\"filename\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\controllers\\\\usersController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Property-Pro-Lite1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Property-Pro-Lite1",
      "filename": "D:\\Property-Pro-Lite1\\server\\controllers\\usersController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Property-Pro-Lite1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Property-Pro-Lite1\\server\\controllers\\usersController.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Property-Pro-Lite1\\server\\controllers\\usersController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Property-Pro-Lite1\\server\\controllers",
        "sourceFileName": "usersController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _database = _interopRequireDefault(require(\"../models/database\"));\n\nvar _usersHelper = _interopRequireDefault(require(\"../helpers/usersHelper\"));\n\nvar _auth = _interopRequireDefault(require(\"../helpers/auth\"));\n\nvar _errorHelper = _interopRequireDefault(require(\"../helpers/errorHelper\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar users = _database[\"default\"].users;\nvar payloader = _auth[\"default\"].payloader;\nvar authError = _errorHelper[\"default\"].authError,\n    inputError = _errorHelper[\"default\"].inputError,\n    userExists = _errorHelper[\"default\"].userExists;\n\nvar checkIfUserExists = function checkIfUserExists(req) {\n  return users.find(function (user) {\n    return user.email === req;\n  });\n};\n/**\r\n * Sign up a new User account.\r\n * @param {object} req the request object.\r\n * @param {object} res the response object.\r\n * @return  {Function} next calls the next middleware\r\n *\r\n*/\n\n\nvar userSignUp =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, email, first_name, last_name, phoneNumber, address, is_admin, password, data, salt, newUser;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, email = _req$body.email, first_name = _req$body.first_name, last_name = _req$body.last_name, phoneNumber = _req$body.phoneNumber, address = _req$body.address, is_admin = _req$body.is_admin;\n            password = req.body.password;\n            inputError(req, res);\n            data = checkIfUserExists(email);\n            userExists(data, res);\n            _context.prev = 5;\n            _context.next = 8;\n            return _bcrypt[\"default\"].genSalt(10);\n\n          case 8:\n            salt = _context.sent;\n            _context.next = 11;\n            return _bcrypt[\"default\"].hash(password, salt);\n\n          case 11:\n            password = _context.sent;\n            _context.next = 14;\n            return (0, _usersHelper[\"default\"])(email, first_name, last_name, password, phoneNumber, address, is_admin);\n\n          case 14:\n            newUser = _context.sent;\n            return _context.abrupt(\"return\", payloader(res, newUser[newUser.length - 1], 201));\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](5);\n            return _context.abrupt(\"return\", res.status(500).send({\n              status: 'error',\n              error: _context.t0\n            }));\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[5, 18]]);\n  }));\n\n  return function userSignUp(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\r\n * Login an existing User account.\r\n * @param {object} req the request object.\r\n * @param {object} res the response object.\r\n * @return  {Function} next calls the next middleware\r\n *\r\n*/\n\n\nvar userSignIn =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var email, password, data, isMatch;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            email = req.body.email;\n            password = req.body.password;\n            inputError(req, res);\n            data = checkIfUserExists(email);\n\n            if (!(data === undefined)) {\n              _context2.next = 6;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", authError(res));\n\n          case 6:\n            _context2.next = 8;\n            return _bcrypt[\"default\"].compare(password, data.password);\n\n          case 8:\n            isMatch = _context2.sent;\n\n            if (isMatch) {\n              _context2.next = 11;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", authError(res));\n\n          case 11:\n            _context2.prev = 11;\n            return _context2.abrupt(\"return\", payloader(res, data, 200));\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](11);\n            console.log(_context2.t0);\n\n          case 18:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[11, 15]]);\n  }));\n\n  return function userSignIn(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar _default = {\n  userSignUp: userSignUp,\n  userSignIn: userSignIn\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzQ29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJ1c2VycyIsImRhdGFiYXNlIiwicGF5bG9hZGVyIiwicGF5bG9hZCIsImF1dGhFcnJvciIsImVycm9ySGVscGVycyIsImlucHV0RXJyb3IiLCJ1c2VyRXhpc3RzIiwiY2hlY2tJZlVzZXJFeGlzdHMiLCJyZXEiLCJmaW5kIiwidXNlciIsImVtYWlsIiwidXNlclNpZ25VcCIsInJlcyIsImJvZHkiLCJmaXJzdF9uYW1lIiwibGFzdF9uYW1lIiwicGhvbmVOdW1iZXIiLCJhZGRyZXNzIiwiaXNfYWRtaW4iLCJwYXNzd29yZCIsImRhdGEiLCJiY3J5cHQiLCJnZW5TYWx0Iiwic2FsdCIsImhhc2giLCJuZXdVc2VyIiwibGVuZ3RoIiwic3RhdHVzIiwic2VuZCIsImVycm9yIiwidXNlclNpZ25JbiIsInVuZGVmaW5lZCIsImNvbXBhcmUiLCJpc01hdGNoIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztJQUVRQSxLLEdBQVVDLG9CLENBQVZELEs7SUFDQUUsUyxHQUFjQyxnQixDQUFkRCxTO0lBQ0FFLFMsR0FBc0NDLHVCLENBQXRDRCxTO0lBQVdFLFUsR0FBMkJELHVCLENBQTNCQyxVO0lBQVlDLFUsR0FBZUYsdUIsQ0FBZkUsVTs7QUFFL0IsSUFBTUMsaUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFvQixDQUFBQyxHQUFHO0FBQUEsU0FBSVQsS0FBSyxDQUFDVSxJQUFOLENBQVcsVUFBQUMsSUFBSTtBQUFBLFdBQUlBLElBQUksQ0FBQ0MsS0FBTCxLQUFlSCxHQUFuQjtBQUFBLEdBQWYsQ0FBSjtBQUFBLENBQTdCO0FBRUE7Ozs7Ozs7OztBQVFBLElBQU1JLFVBQVU7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUFHLGlCQUFPSixHQUFQLEVBQVlLLEdBQVo7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHdCQUdiTCxHQUFHLENBQUNNLElBSFMsRUFFZkgsS0FGZSxhQUVmQSxLQUZlLEVBRVJJLFVBRlEsYUFFUkEsVUFGUSxFQUVJQyxTQUZKLGFBRUlBLFNBRkosRUFFZUMsV0FGZixhQUVlQSxXQUZmLEVBRTRCQyxPQUY1QixhQUU0QkEsT0FGNUIsRUFFcUNDLFFBRnJDLGFBRXFDQSxRQUZyQztBQUlYQyxZQUFBQSxRQUpXLEdBSUVaLEdBQUcsQ0FBQ00sSUFKTixDQUlYTSxRQUpXO0FBS2pCZixZQUFBQSxVQUFVLENBQUNHLEdBQUQsRUFBTUssR0FBTixDQUFWO0FBQ01RLFlBQUFBLElBTlcsR0FNSmQsaUJBQWlCLENBQUNJLEtBQUQsQ0FOYjtBQU9qQkwsWUFBQUEsVUFBVSxDQUFDZSxJQUFELEVBQU9SLEdBQVAsQ0FBVjtBQVBpQjtBQUFBO0FBQUEsbUJBU0lTLG1CQUFPQyxPQUFQLENBQWUsRUFBZixDQVRKOztBQUFBO0FBU1RDLFlBQUFBLElBVFM7QUFBQTtBQUFBLG1CQVVFRixtQkFBT0csSUFBUCxDQUFZTCxRQUFaLEVBQXNCSSxJQUF0QixDQVZGOztBQUFBO0FBVWZKLFlBQUFBLFFBVmU7QUFBQTtBQUFBLG1CQVdPLDZCQUNwQlQsS0FEb0IsRUFDYkksVUFEYSxFQUNEQyxTQURDLEVBQ1VJLFFBRFYsRUFDb0JILFdBRHBCLEVBQ2lDQyxPQURqQyxFQUMwQ0MsUUFEMUMsQ0FYUDs7QUFBQTtBQVdUTyxZQUFBQSxPQVhTO0FBQUEsNkNBY1J6QixTQUFTLENBQUNZLEdBQUQsRUFBTWEsT0FBTyxDQUFDQSxPQUFPLENBQUNDLE1BQVIsR0FBaUIsQ0FBbEIsQ0FBYixFQUFtQyxHQUFuQyxDQWREOztBQUFBO0FBQUE7QUFBQTtBQUFBLDZDQWdCUmQsR0FBRyxDQUFDZSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDMUJELGNBQUFBLE1BQU0sRUFBRSxPQURrQjtBQUUxQkUsY0FBQUEsS0FBSztBQUZxQixhQUFyQixDQWhCUTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFWbEIsVUFBVTtBQUFBO0FBQUE7QUFBQSxHQUFoQjtBQXdCQTs7Ozs7Ozs7O0FBUUEsSUFBTW1CLFVBQVU7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUFHLGtCQUFPdkIsR0FBUCxFQUFZSyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNURixZQUFBQSxLQURTLEdBQ0NILEdBQUcsQ0FBQ00sSUFETCxDQUNUSCxLQURTO0FBRVRTLFlBQUFBLFFBRlMsR0FFSVosR0FBRyxDQUFDTSxJQUZSLENBRVRNLFFBRlM7QUFHakJmLFlBQUFBLFVBQVUsQ0FBQ0csR0FBRCxFQUFNSyxHQUFOLENBQVY7QUFDTVEsWUFBQUEsSUFKVyxHQUlKZCxpQkFBaUIsQ0FBQ0ksS0FBRCxDQUpiOztBQUFBLGtCQUtiVSxJQUFJLEtBQUtXLFNBTEk7QUFBQTtBQUFBO0FBQUE7O0FBQUEsOENBTVI3QixTQUFTLENBQUNVLEdBQUQsQ0FORDs7QUFBQTtBQUFBO0FBQUEsbUJBUUtTLG1CQUFPVyxPQUFQLENBQWViLFFBQWYsRUFBeUJDLElBQUksQ0FBQ0QsUUFBOUIsQ0FSTDs7QUFBQTtBQVFYYyxZQUFBQSxPQVJXOztBQUFBLGdCQVNaQSxPQVRZO0FBQUE7QUFBQTtBQUFBOztBQUFBLDhDQVVSL0IsU0FBUyxDQUFDVSxHQUFELENBVkQ7O0FBQUE7QUFBQTtBQUFBLDhDQWFSWixTQUFTLENBQUNZLEdBQUQsRUFBTVEsSUFBTixFQUFZLEdBQVosQ0FiRDs7QUFBQTtBQUFBO0FBQUE7QUFlZmMsWUFBQUEsT0FBTyxDQUFDQyxHQUFSOztBQWZlO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQVZMLFVBQVU7QUFBQTtBQUFBO0FBQUEsR0FBaEI7O2VBbUJlO0FBQUVuQixFQUFBQSxVQUFVLEVBQVZBLFVBQUY7QUFBY21CLEVBQUFBLFVBQVUsRUFBVkE7QUFBZCxDIiwic291cmNlUm9vdCI6IkQ6XFxQcm9wZXJ0eS1Qcm8tTGl0ZTFcXHNlcnZlclxcY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmNyeXB0IGZyb20gJ2JjcnlwdCc7XHJcbmltcG9ydCBkYXRhYmFzZSBmcm9tICcuLi9tb2RlbHMvZGF0YWJhc2UnO1xyXG5pbXBvcnQgc2F2ZU5ld1VzZXIgZnJvbSAnLi4vaGVscGVycy91c2Vyc0hlbHBlcic7XHJcbmltcG9ydCBwYXlsb2FkIGZyb20gJy4uL2hlbHBlcnMvYXV0aCc7XHJcbmltcG9ydCBlcnJvckhlbHBlcnMgZnJvbSAnLi4vaGVscGVycy9lcnJvckhlbHBlcic7XHJcblxyXG5jb25zdCB7IHVzZXJzIH0gPSBkYXRhYmFzZTtcclxuY29uc3QgeyBwYXlsb2FkZXIgfSA9IHBheWxvYWQ7XHJcbmNvbnN0IHsgYXV0aEVycm9yLCBpbnB1dEVycm9yLCB1c2VyRXhpc3RzIH0gPSBlcnJvckhlbHBlcnM7XHJcblxyXG5jb25zdCBjaGVja0lmVXNlckV4aXN0cyA9IHJlcSA9PiB1c2Vycy5maW5kKHVzZXIgPT4gdXNlci5lbWFpbCA9PT0gcmVxKTtcclxuXHJcbi8qKlxyXG4gKiBTaWduIHVwIGEgbmV3IFVzZXIgYWNjb3VudC5cclxuICogQHBhcmFtIHtvYmplY3R9IHJlcSB0aGUgcmVxdWVzdCBvYmplY3QuXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSByZXMgdGhlIHJlc3BvbnNlIG9iamVjdC5cclxuICogQHJldHVybiAge0Z1bmN0aW9ufSBuZXh0IGNhbGxzIHRoZSBuZXh0IG1pZGRsZXdhcmVcclxuICpcclxuKi9cclxuXHJcbmNvbnN0IHVzZXJTaWduVXAgPSBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICBjb25zdCB7XHJcbiAgICBlbWFpbCwgZmlyc3RfbmFtZSwgbGFzdF9uYW1lLCBwaG9uZU51bWJlciwgYWRkcmVzcywgaXNfYWRtaW5cclxuICB9ID0gcmVxLmJvZHk7XHJcbiAgbGV0IHsgcGFzc3dvcmQgfSA9IHJlcS5ib2R5O1xyXG4gIGlucHV0RXJyb3IocmVxLCByZXMpO1xyXG4gIGNvbnN0IGRhdGEgPSBjaGVja0lmVXNlckV4aXN0cyhlbWFpbCk7XHJcbiAgdXNlckV4aXN0cyhkYXRhLCByZXMpO1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBzYWx0ID0gYXdhaXQgYmNyeXB0LmdlblNhbHQoMTApO1xyXG4gICAgcGFzc3dvcmQgPSBhd2FpdCBiY3J5cHQuaGFzaChwYXNzd29yZCwgc2FsdCk7XHJcbiAgICBjb25zdCBuZXdVc2VyID0gYXdhaXQgc2F2ZU5ld1VzZXIoXHJcbiAgICAgIGVtYWlsLCBmaXJzdF9uYW1lLCBsYXN0X25hbWUsIHBhc3N3b3JkLCBwaG9uZU51bWJlciwgYWRkcmVzcywgaXNfYWRtaW5cclxuICAgICk7XHJcbiAgICByZXR1cm4gcGF5bG9hZGVyKHJlcywgbmV3VXNlcltuZXdVc2VyLmxlbmd0aCAtIDFdLCAyMDEpO1xyXG4gIH0gY2F0Y2ggKGVycikge1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5zZW5kKHtcclxuICAgICAgc3RhdHVzOiAnZXJyb3InLFxyXG4gICAgICBlcnJvcjogZXJyLFxyXG4gICAgfSk7XHJcbiAgfVxyXG59O1xyXG5cclxuXHJcbi8qKlxyXG4gKiBMb2dpbiBhbiBleGlzdGluZyBVc2VyIGFjY291bnQuXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSByZXEgdGhlIHJlcXVlc3Qgb2JqZWN0LlxyXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzIHRoZSByZXNwb25zZSBvYmplY3QuXHJcbiAqIEByZXR1cm4gIHtGdW5jdGlvbn0gbmV4dCBjYWxscyB0aGUgbmV4dCBtaWRkbGV3YXJlXHJcbiAqXHJcbiovXHJcblxyXG5jb25zdCB1c2VyU2lnbkluID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgeyBlbWFpbCB9ID0gcmVxLmJvZHk7XHJcbiAgY29uc3QgeyBwYXNzd29yZCB9ID0gcmVxLmJvZHk7XHJcbiAgaW5wdXRFcnJvcihyZXEsIHJlcyk7XHJcbiAgY29uc3QgZGF0YSA9IGNoZWNrSWZVc2VyRXhpc3RzKGVtYWlsKTtcclxuICBpZiAoZGF0YSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICByZXR1cm4gYXV0aEVycm9yKHJlcyk7XHJcbiAgfVxyXG4gIGNvbnN0IGlzTWF0Y2ggPSBhd2FpdCBiY3J5cHQuY29tcGFyZShwYXNzd29yZCwgZGF0YS5wYXNzd29yZCk7XHJcbiAgaWYgKCFpc01hdGNoKSB7XHJcbiAgICByZXR1cm4gYXV0aEVycm9yKHJlcyk7XHJcbiAgfVxyXG4gIHRyeSB7XHJcbiAgICByZXR1cm4gcGF5bG9hZGVyKHJlcywgZGF0YSwgMjAwKTtcclxuICB9IGNhdGNoIChlcnIpIHtcclxuICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgeyB1c2VyU2lnblVwLCB1c2VyU2lnbkluIH07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "usersController.js"
      ],
      "names": [
        "users",
        "database",
        "payloader",
        "payload",
        "authError",
        "errorHelpers",
        "inputError",
        "userExists",
        "checkIfUserExists",
        "req",
        "find",
        "user",
        "email",
        "userSignUp",
        "res",
        "body",
        "first_name",
        "last_name",
        "phoneNumber",
        "address",
        "is_admin",
        "password",
        "data",
        "bcrypt",
        "genSalt",
        "salt",
        "hash",
        "newUser",
        "length",
        "status",
        "send",
        "error",
        "userSignIn",
        "undefined",
        "compare",
        "isMatch",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;IAEQA,K,GAAUC,oB,CAAVD,K;IACAE,S,GAAcC,gB,CAAdD,S;IACAE,S,GAAsCC,uB,CAAtCD,S;IAAWE,U,GAA2BD,uB,CAA3BC,U;IAAYC,U,GAAeF,uB,CAAfE,U;;AAE/B,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,GAAG;AAAA,SAAIT,KAAK,CAACU,IAAN,CAAW,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,KAAL,KAAeH,GAAnB;AAAA,GAAf,CAAJ;AAAA,CAA7B;AAEA;;;;;;;;;AAQA,IAAMI,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOJ,GAAP,EAAYK,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBAGbL,GAAG,CAACM,IAHS,EAEfH,KAFe,aAEfA,KAFe,EAERI,UAFQ,aAERA,UAFQ,EAEIC,SAFJ,aAEIA,SAFJ,EAEeC,WAFf,aAEeA,WAFf,EAE4BC,OAF5B,aAE4BA,OAF5B,EAEqCC,QAFrC,aAEqCA,QAFrC;AAIXC,YAAAA,QAJW,GAIEZ,GAAG,CAACM,IAJN,CAIXM,QAJW;AAKjBf,YAAAA,UAAU,CAACG,GAAD,EAAMK,GAAN,CAAV;AACMQ,YAAAA,IANW,GAMJd,iBAAiB,CAACI,KAAD,CANb;AAOjBL,YAAAA,UAAU,CAACe,IAAD,EAAOR,GAAP,CAAV;AAPiB;AAAA;AAAA,mBASIS,mBAAOC,OAAP,CAAe,EAAf,CATJ;;AAAA;AASTC,YAAAA,IATS;AAAA;AAAA,mBAUEF,mBAAOG,IAAP,CAAYL,QAAZ,EAAsBI,IAAtB,CAVF;;AAAA;AAUfJ,YAAAA,QAVe;AAAA;AAAA,mBAWO,6BACpBT,KADoB,EACbI,UADa,EACDC,SADC,EACUI,QADV,EACoBH,WADpB,EACiCC,OADjC,EAC0CC,QAD1C,CAXP;;AAAA;AAWTO,YAAAA,OAXS;AAAA,6CAcRzB,SAAS,CAACY,GAAD,EAAMa,OAAO,CAACA,OAAO,CAACC,MAAR,GAAiB,CAAlB,CAAb,EAAmC,GAAnC,CAdD;;AAAA;AAAA;AAAA;AAAA,6CAgBRd,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,cAAAA,MAAM,EAAE,OADkB;AAE1BE,cAAAA,KAAK;AAFqB,aAArB,CAhBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVlB,UAAU;AAAA;AAAA;AAAA,GAAhB;AAwBA;;;;;;;;;AAQA,IAAMmB,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOvB,GAAP,EAAYK,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACTF,YAAAA,KADS,GACCH,GAAG,CAACM,IADL,CACTH,KADS;AAETS,YAAAA,QAFS,GAEIZ,GAAG,CAACM,IAFR,CAETM,QAFS;AAGjBf,YAAAA,UAAU,CAACG,GAAD,EAAMK,GAAN,CAAV;AACMQ,YAAAA,IAJW,GAIJd,iBAAiB,CAACI,KAAD,CAJb;;AAAA,kBAKbU,IAAI,KAAKW,SALI;AAAA;AAAA;AAAA;;AAAA,8CAMR7B,SAAS,CAACU,GAAD,CAND;;AAAA;AAAA;AAAA,mBAQKS,mBAAOW,OAAP,CAAeb,QAAf,EAAyBC,IAAI,CAACD,QAA9B,CARL;;AAAA;AAQXc,YAAAA,OARW;;AAAA,gBASZA,OATY;AAAA;AAAA;AAAA;;AAAA,8CAUR/B,SAAS,CAACU,GAAD,CAVD;;AAAA;AAAA;AAAA,8CAaRZ,SAAS,CAACY,GAAD,EAAMQ,IAAN,EAAY,GAAZ,CAbD;;AAAA;AAAA;AAAA;AAefc,YAAAA,OAAO,CAACC,GAAR;;AAfe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVL,UAAU;AAAA;AAAA;AAAA,GAAhB;;eAmBe;AAAEnB,EAAAA,UAAU,EAAVA,UAAF;AAAcmB,EAAAA,UAAU,EAAVA;AAAd,C",
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\controllers",
      "sourcesContent": [
        "import bcrypt from 'bcrypt';\r\nimport database from '../models/database';\r\nimport saveNewUser from '../helpers/usersHelper';\r\nimport payload from '../helpers/auth';\r\nimport errorHelpers from '../helpers/errorHelper';\r\n\r\nconst { users } = database;\r\nconst { payloader } = payload;\r\nconst { authError, inputError, userExists } = errorHelpers;\r\n\r\nconst checkIfUserExists = req => users.find(user => user.email === req);\r\n\r\n/**\r\n * Sign up a new User account.\r\n * @param {object} req the request object.\r\n * @param {object} res the response object.\r\n * @return  {Function} next calls the next middleware\r\n *\r\n*/\r\n\r\nconst userSignUp = async (req, res) => {\r\n  const {\r\n    email, first_name, last_name, phoneNumber, address, is_admin\r\n  } = req.body;\r\n  let { password } = req.body;\r\n  inputError(req, res);\r\n  const data = checkIfUserExists(email);\r\n  userExists(data, res);\r\n  try {\r\n    const salt = await bcrypt.genSalt(10);\r\n    password = await bcrypt.hash(password, salt);\r\n    const newUser = await saveNewUser(\r\n      email, first_name, last_name, password, phoneNumber, address, is_admin\r\n    );\r\n    return payloader(res, newUser[newUser.length - 1], 201);\r\n  } catch (err) {\r\n    return res.status(500).send({\r\n      status: 'error',\r\n      error: err,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Login an existing User account.\r\n * @param {object} req the request object.\r\n * @param {object} res the response object.\r\n * @return  {Function} next calls the next middleware\r\n *\r\n*/\r\n\r\nconst userSignIn = async (req, res) => {\r\n  const { email } = req.body;\r\n  const { password } = req.body;\r\n  inputError(req, res);\r\n  const data = checkIfUserExists(email);\r\n  if (data === undefined) {\r\n    return authError(res);\r\n  }\r\n  const isMatch = await bcrypt.compare(password, data.password);\r\n  if (!isMatch) {\r\n    return authError(res);\r\n  }\r\n  try {\r\n    return payloader(res, data, 200);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport default { userSignUp, userSignIn };\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562968317080
  },
  "{\"sourceRoot\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\helpers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Property-Pro-Lite1\",\"filename\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\helpers\\\\usersHelper.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Property-Pro-Lite1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Property-Pro-Lite1",
      "filename": "D:\\Property-Pro-Lite1\\server\\helpers\\usersHelper.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Property-Pro-Lite1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Property-Pro-Lite1\\server\\helpers\\usersHelper.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Property-Pro-Lite1\\server\\helpers\\usersHelper.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
        "sourceFileName": "usersHelper.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _database = _interopRequireDefault(require(\"../models/database\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar users = _database[\"default\"].users;\n/**\r\n   * Create a new User account.\r\n   * @param {object} email the email of the new user.\r\n   * @param {object} first_name the first name of the new user.\r\n   * @param {object} last_name the last name of the new user.\r\n   * @param {object} password the password of the new user.\r\n   * @param {object} phoneNumber the phone number of the new user.\r\n   * @param {object} address the address of the new user.\r\n   * @param {object} is_admin the admin status of the new user.\r\n   * @return  {Function} next calls the next middleware\r\n   *\r\n   */\n\nvar saveNewUser = function saveNewUser(email, first_name, last_name, password, phoneNumber, address, is_admin) {\n  var newUser = {\n    id: users.length + 1,\n    email: email,\n    first_name: first_name,\n    last_name: last_name,\n    password: password,\n    phoneNumber: phoneNumber,\n    address: address,\n    is_admin: is_admin\n  };\n  users.push(newUser);\n  return users;\n};\n\nvar _default = saveNewUser;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzSGVscGVyLmpzIl0sIm5hbWVzIjpbInVzZXJzIiwiZGF0YWJhc2UiLCJzYXZlTmV3VXNlciIsImVtYWlsIiwiZmlyc3RfbmFtZSIsImxhc3RfbmFtZSIsInBhc3N3b3JkIiwicGhvbmVOdW1iZXIiLCJhZGRyZXNzIiwiaXNfYWRtaW4iLCJuZXdVc2VyIiwiaWQiLCJsZW5ndGgiLCJwdXNoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7SUFFUUEsSyxHQUFVQyxvQixDQUFWRCxLO0FBRVI7Ozs7Ozs7Ozs7Ozs7QUFjQSxJQUFNRSxXQUFXLEdBQUcsU0FBZEEsV0FBYyxDQUFDQyxLQUFELEVBQVFDLFVBQVIsRUFBb0JDLFNBQXBCLEVBQStCQyxRQUEvQixFQUF5Q0MsV0FBekMsRUFBc0RDLE9BQXRELEVBQStEQyxRQUEvRCxFQUE0RTtBQUM5RixNQUFNQyxPQUFPLEdBQUc7QUFDZEMsSUFBQUEsRUFBRSxFQUFFWCxLQUFLLENBQUNZLE1BQU4sR0FBZSxDQURMO0FBRWRULElBQUFBLEtBQUssRUFBTEEsS0FGYztBQUdkQyxJQUFBQSxVQUFVLEVBQVZBLFVBSGM7QUFJZEMsSUFBQUEsU0FBUyxFQUFUQSxTQUpjO0FBS2RDLElBQUFBLFFBQVEsRUFBUkEsUUFMYztBQU1kQyxJQUFBQSxXQUFXLEVBQVhBLFdBTmM7QUFPZEMsSUFBQUEsT0FBTyxFQUFQQSxPQVBjO0FBUWRDLElBQUFBLFFBQVEsRUFBUkE7QUFSYyxHQUFoQjtBQVVBVCxFQUFBQSxLQUFLLENBQUNhLElBQU4sQ0FBV0gsT0FBWDtBQUNBLFNBQU9WLEtBQVA7QUFDRCxDQWJEOztlQWdCZUUsVyIsInNvdXJjZVJvb3QiOiJEOlxcUHJvcGVydHktUHJvLUxpdGUxXFxzZXJ2ZXJcXGhlbHBlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGF0YWJhc2UgZnJvbSAnLi4vbW9kZWxzL2RhdGFiYXNlJztcclxuXHJcbmNvbnN0IHsgdXNlcnMgfSA9IGRhdGFiYXNlO1xyXG5cclxuLyoqXHJcbiAgICogQ3JlYXRlIGEgbmV3IFVzZXIgYWNjb3VudC5cclxuICAgKiBAcGFyYW0ge29iamVjdH0gZW1haWwgdGhlIGVtYWlsIG9mIHRoZSBuZXcgdXNlci5cclxuICAgKiBAcGFyYW0ge29iamVjdH0gZmlyc3RfbmFtZSB0aGUgZmlyc3QgbmFtZSBvZiB0aGUgbmV3IHVzZXIuXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IGxhc3RfbmFtZSB0aGUgbGFzdCBuYW1lIG9mIHRoZSBuZXcgdXNlci5cclxuICAgKiBAcGFyYW0ge29iamVjdH0gcGFzc3dvcmQgdGhlIHBhc3N3b3JkIG9mIHRoZSBuZXcgdXNlci5cclxuICAgKiBAcGFyYW0ge29iamVjdH0gcGhvbmVOdW1iZXIgdGhlIHBob25lIG51bWJlciBvZiB0aGUgbmV3IHVzZXIuXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IGFkZHJlc3MgdGhlIGFkZHJlc3Mgb2YgdGhlIG5ldyB1c2VyLlxyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBpc19hZG1pbiB0aGUgYWRtaW4gc3RhdHVzIG9mIHRoZSBuZXcgdXNlci5cclxuICAgKiBAcmV0dXJuICB7RnVuY3Rpb259IG5leHQgY2FsbHMgdGhlIG5leHQgbWlkZGxld2FyZVxyXG4gICAqXHJcbiAgICovXHJcblxyXG5cclxuY29uc3Qgc2F2ZU5ld1VzZXIgPSAoZW1haWwsIGZpcnN0X25hbWUsIGxhc3RfbmFtZSwgcGFzc3dvcmQsIHBob25lTnVtYmVyLCBhZGRyZXNzLCBpc19hZG1pbikgPT4ge1xyXG4gIGNvbnN0IG5ld1VzZXIgPSB7XHJcbiAgICBpZDogdXNlcnMubGVuZ3RoICsgMSxcclxuICAgIGVtYWlsLFxyXG4gICAgZmlyc3RfbmFtZSxcclxuICAgIGxhc3RfbmFtZSxcclxuICAgIHBhc3N3b3JkLFxyXG4gICAgcGhvbmVOdW1iZXIsXHJcbiAgICBhZGRyZXNzLFxyXG4gICAgaXNfYWRtaW5cclxuICB9O1xyXG4gIHVzZXJzLnB1c2gobmV3VXNlcik7XHJcbiAgcmV0dXJuIHVzZXJzO1xyXG59O1xyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHNhdmVOZXdVc2VyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "usersHelper.js"
      ],
      "names": [
        "users",
        "database",
        "saveNewUser",
        "email",
        "first_name",
        "last_name",
        "password",
        "phoneNumber",
        "address",
        "is_admin",
        "newUser",
        "id",
        "length",
        "push"
      ],
      "mappings": ";;;;;;;AAAA;;;;IAEQA,K,GAAUC,oB,CAAVD,K;AAER;;;;;;;;;;;;;AAcA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,UAAR,EAAoBC,SAApB,EAA+BC,QAA/B,EAAyCC,WAAzC,EAAsDC,OAAtD,EAA+DC,QAA/D,EAA4E;AAC9F,MAAMC,OAAO,GAAG;AACdC,IAAAA,EAAE,EAAEX,KAAK,CAACY,MAAN,GAAe,CADL;AAEdT,IAAAA,KAAK,EAALA,KAFc;AAGdC,IAAAA,UAAU,EAAVA,UAHc;AAIdC,IAAAA,SAAS,EAATA,SAJc;AAKdC,IAAAA,QAAQ,EAARA,QALc;AAMdC,IAAAA,WAAW,EAAXA,WANc;AAOdC,IAAAA,OAAO,EAAPA,OAPc;AAQdC,IAAAA,QAAQ,EAARA;AARc,GAAhB;AAUAT,EAAAA,KAAK,CAACa,IAAN,CAAWH,OAAX;AACA,SAAOV,KAAP;AACD,CAbD;;eAgBeE,W",
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
      "sourcesContent": [
        "import database from '../models/database';\r\n\r\nconst { users } = database;\r\n\r\n/**\r\n   * Create a new User account.\r\n   * @param {object} email the email of the new user.\r\n   * @param {object} first_name the first name of the new user.\r\n   * @param {object} last_name the last name of the new user.\r\n   * @param {object} password the password of the new user.\r\n   * @param {object} phoneNumber the phone number of the new user.\r\n   * @param {object} address the address of the new user.\r\n   * @param {object} is_admin the admin status of the new user.\r\n   * @return  {Function} next calls the next middleware\r\n   *\r\n   */\r\n\r\n\r\nconst saveNewUser = (email, first_name, last_name, password, phoneNumber, address, is_admin) => {\r\n  const newUser = {\r\n    id: users.length + 1,\r\n    email,\r\n    first_name,\r\n    last_name,\r\n    password,\r\n    phoneNumber,\r\n    address,\r\n    is_admin\r\n  };\r\n  users.push(newUser);\r\n  return users;\r\n};\r\n\r\n\r\nexport default saveNewUser;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562969872699
  },
  "{\"sourceRoot\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\helpers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Property-Pro-Lite1\",\"filename\":\"D:\\\\Property-Pro-Lite1\\\\server\\\\helpers\\\\auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Property-Pro-Lite1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Property-Pro-Lite1",
      "filename": "D:\\Property-Pro-Lite1\\server\\helpers\\auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Property-Pro-Lite1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Property-Pro-Lite1\\server\\helpers\\auth.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Property-Pro-Lite1\\server\\helpers\\auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\r\n * Authenticates a User.\r\n * @param {object} req the request object.\r\n * @param {object} res the response object.\r\n * @param {object} next calls the next middleware.\r\n * @return  {Function} next calls the next middleware\r\n *\r\n*/\nvar authMiddleware =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res, next) {\n    var token, decoded;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            token = req.header('x-auth-token');\n\n            if (token) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(401).send({\n              status: 'error',\n              error: 'No token, auth denied'\n            }));\n\n          case 3:\n            _context.prev = 3;\n            decoded = _jsonwebtoken[\"default\"].verify(token, 'jwtSecret');\n            req.user = decoded.user;\n            next();\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](3);\n            return _context.abrupt(\"return\", res.status(401).send({\n              status: 'error',\n              error: 'Invalid Token'\n            }));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 9]]);\n  }));\n\n  return function authMiddleware(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\r\n * Payload middleware/helper function.\r\n * @param {object} res the response object.\r\n * @param {object} data the payload parameter.\r\n *\r\n*/\n\n\nvar payloader =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(res, data, code) {\n    var payload;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            payload = {\n              user: {\n                id: data.id\n              }\n            };\n            _context2.next = 3;\n            return _jsonwebtoken[\"default\"].sign(payload, 'jwtSecret', {\n              expiresIn: '7d'\n            }, function (err, token) {\n              if (err) throw err;\n              return res.status(code).send({\n                status: 'success',\n                data: {\n                  token: token,\n                  data: data\n                }\n              });\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function payloader(_x4, _x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar _default = {\n  authMiddleware: authMiddleware,\n  payloader: payloader\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiYXV0aE1pZGRsZXdhcmUiLCJyZXEiLCJyZXMiLCJuZXh0IiwidG9rZW4iLCJoZWFkZXIiLCJzdGF0dXMiLCJzZW5kIiwiZXJyb3IiLCJkZWNvZGVkIiwiand0IiwidmVyaWZ5IiwidXNlciIsInBheWxvYWRlciIsImRhdGEiLCJjb2RlIiwicGF5bG9hZCIsImlkIiwic2lnbiIsImV4cGlyZXNJbiIsImVyciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7OztBQUVBOzs7Ozs7OztBQVNBLElBQU1BLGNBQWM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUFHLGlCQUFPQyxHQUFQLEVBQVlDLEdBQVosRUFBaUJDLElBQWpCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNmQyxZQUFBQSxLQURlLEdBQ1BILEdBQUcsQ0FBQ0ksTUFBSixDQUFXLGNBQVgsQ0FETzs7QUFBQSxnQkFFaEJELEtBRmdCO0FBQUE7QUFBQTtBQUFBOztBQUFBLDZDQUdaRixHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMxQkQsY0FBQUEsTUFBTSxFQUFFLE9BRGtCO0FBRTFCRSxjQUFBQSxLQUFLLEVBQUU7QUFGbUIsYUFBckIsQ0FIWTs7QUFBQTtBQUFBO0FBU2JDLFlBQUFBLE9BVGEsR0FTSEMseUJBQUlDLE1BQUosQ0FBV1AsS0FBWCxFQUFrQixXQUFsQixDQVRHO0FBVW5CSCxZQUFBQSxHQUFHLENBQUNXLElBQUosR0FBV0gsT0FBTyxDQUFDRyxJQUFuQjtBQUNBVCxZQUFBQSxJQUFJO0FBWGU7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQSw2Q0FhWkQsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDMUJELGNBQUFBLE1BQU0sRUFBRSxPQURrQjtBQUUxQkUsY0FBQUEsS0FBSyxFQUFFO0FBRm1CLGFBQXJCLENBYlk7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBSDs7QUFBQSxrQkFBZFIsY0FBYztBQUFBO0FBQUE7QUFBQSxHQUFwQjtBQW9CQTs7Ozs7Ozs7QUFPQSxJQUFNYSxTQUFTO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFBRyxrQkFBT1gsR0FBUCxFQUFZWSxJQUFaLEVBQWtCQyxJQUFsQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDVkMsWUFBQUEsT0FEVSxHQUNBO0FBQ2RKLGNBQUFBLElBQUksRUFBRTtBQUNKSyxnQkFBQUEsRUFBRSxFQUFFSCxJQUFJLENBQUNHO0FBREw7QUFEUSxhQURBO0FBQUE7QUFBQSxtQkFNVlAseUJBQUlRLElBQUosQ0FDSkYsT0FESSxFQUVKLFdBRkksRUFHSjtBQUFFRyxjQUFBQSxTQUFTLEVBQUU7QUFBYixhQUhJLEVBSUosVUFBQ0MsR0FBRCxFQUFNaEIsS0FBTixFQUFnQjtBQUNkLGtCQUFJZ0IsR0FBSixFQUFTLE1BQU1BLEdBQU47QUFDVCxxQkFBT2xCLEdBQUcsQ0FBQ0ksTUFBSixDQUFXUyxJQUFYLEVBQWlCUixJQUFqQixDQUFzQjtBQUMzQkQsZ0JBQUFBLE1BQU0sRUFBRSxTQURtQjtBQUUzQlEsZ0JBQUFBLElBQUksRUFBRTtBQUNKVixrQkFBQUEsS0FBSyxFQUFMQSxLQURJO0FBRUpVLGtCQUFBQSxJQUFJLEVBQUpBO0FBRkk7QUFGcUIsZUFBdEIsQ0FBUDtBQU9ELGFBYkcsQ0FOVTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFURCxTQUFTO0FBQUE7QUFBQTtBQUFBLEdBQWY7O2VBdUJlO0FBQUViLEVBQUFBLGNBQWMsRUFBZEEsY0FBRjtBQUFrQmEsRUFBQUEsU0FBUyxFQUFUQTtBQUFsQixDIiwic291cmNlUm9vdCI6IkQ6XFxQcm9wZXJ0eS1Qcm8tTGl0ZTFcXHNlcnZlclxcaGVscGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJztcclxuXHJcbi8qKlxyXG4gKiBBdXRoZW50aWNhdGVzIGEgVXNlci5cclxuICogQHBhcmFtIHtvYmplY3R9IHJlcSB0aGUgcmVxdWVzdCBvYmplY3QuXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSByZXMgdGhlIHJlc3BvbnNlIG9iamVjdC5cclxuICogQHBhcmFtIHtvYmplY3R9IG5leHQgY2FsbHMgdGhlIG5leHQgbWlkZGxld2FyZS5cclxuICogQHJldHVybiAge0Z1bmN0aW9ufSBuZXh0IGNhbGxzIHRoZSBuZXh0IG1pZGRsZXdhcmVcclxuICpcclxuKi9cclxuXHJcbmNvbnN0IGF1dGhNaWRkbGV3YXJlID0gYXN5bmMgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XHJcbiAgY29uc3QgdG9rZW4gPSByZXEuaGVhZGVyKCd4LWF1dGgtdG9rZW4nKTtcclxuICBpZiAoIXRva2VuKSB7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLnNlbmQoe1xyXG4gICAgICBzdGF0dXM6ICdlcnJvcicsXHJcbiAgICAgIGVycm9yOiAnTm8gdG9rZW4sIGF1dGggZGVuaWVkJ1xyXG4gICAgfSk7XHJcbiAgfVxyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBkZWNvZGVkID0gand0LnZlcmlmeSh0b2tlbiwgJ2p3dFNlY3JldCcpO1xyXG4gICAgcmVxLnVzZXIgPSBkZWNvZGVkLnVzZXI7XHJcbiAgICBuZXh0KCk7XHJcbiAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLnNlbmQoe1xyXG4gICAgICBzdGF0dXM6ICdlcnJvcicsXHJcbiAgICAgIGVycm9yOiAnSW52YWxpZCBUb2tlbidcclxuICAgIH0pO1xyXG4gIH1cclxufTtcclxuXHJcbi8qKlxyXG4gKiBQYXlsb2FkIG1pZGRsZXdhcmUvaGVscGVyIGZ1bmN0aW9uLlxyXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzIHRoZSByZXNwb25zZSBvYmplY3QuXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSBkYXRhIHRoZSBwYXlsb2FkIHBhcmFtZXRlci5cclxuICpcclxuKi9cclxuXHJcbmNvbnN0IHBheWxvYWRlciA9IGFzeW5jIChyZXMsIGRhdGEsIGNvZGUpID0+IHtcclxuICBjb25zdCBwYXlsb2FkID0ge1xyXG4gICAgdXNlcjoge1xyXG4gICAgICBpZDogZGF0YS5pZFxyXG4gICAgfVxyXG4gIH07XHJcbiAgYXdhaXQgand0LnNpZ24oXHJcbiAgICBwYXlsb2FkLFxyXG4gICAgJ2p3dFNlY3JldCcsXHJcbiAgICB7IGV4cGlyZXNJbjogJzdkJyB9LFxyXG4gICAgKGVyciwgdG9rZW4pID0+IHtcclxuICAgICAgaWYgKGVycikgdGhyb3cgZXJyO1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyhjb2RlKS5zZW5kKHtcclxuICAgICAgICBzdGF0dXM6ICdzdWNjZXNzJyxcclxuICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICB0b2tlbixcclxuICAgICAgICAgIGRhdGEsXHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgeyBhdXRoTWlkZGxld2FyZSwgcGF5bG9hZGVyIH07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "authMiddleware",
        "req",
        "res",
        "next",
        "token",
        "header",
        "status",
        "send",
        "error",
        "decoded",
        "jwt",
        "verify",
        "user",
        "payloader",
        "data",
        "code",
        "payload",
        "id",
        "sign",
        "expiresIn",
        "err"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;AAEA;;;;;;;;AASA,IAAMA,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,YAAAA,KADe,GACPH,GAAG,CAACI,MAAJ,CAAW,cAAX,CADO;;AAAA,gBAEhBD,KAFgB;AAAA;AAAA;AAAA;;AAAA,6CAGZF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,cAAAA,MAAM,EAAE,OADkB;AAE1BE,cAAAA,KAAK,EAAE;AAFmB,aAArB,CAHY;;AAAA;AAAA;AASbC,YAAAA,OATa,GASHC,yBAAIC,MAAJ,CAAWP,KAAX,EAAkB,WAAlB,CATG;AAUnBH,YAAAA,GAAG,CAACW,IAAJ,GAAWH,OAAO,CAACG,IAAnB;AACAT,YAAAA,IAAI;AAXe;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAaZD,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,cAAAA,MAAM,EAAE,OADkB;AAE1BE,cAAAA,KAAK,EAAE;AAFmB,aAArB,CAbY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdR,cAAc;AAAA;AAAA;AAAA,GAApB;AAoBA;;;;;;;;AAOA,IAAMa,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOX,GAAP,EAAYY,IAAZ,EAAkBC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,OADU,GACA;AACdJ,cAAAA,IAAI,EAAE;AACJK,gBAAAA,EAAE,EAAEH,IAAI,CAACG;AADL;AADQ,aADA;AAAA;AAAA,mBAMVP,yBAAIQ,IAAJ,CACJF,OADI,EAEJ,WAFI,EAGJ;AAAEG,cAAAA,SAAS,EAAE;AAAb,aAHI,EAIJ,UAACC,GAAD,EAAMhB,KAAN,EAAgB;AACd,kBAAIgB,GAAJ,EAAS,MAAMA,GAAN;AACT,qBAAOlB,GAAG,CAACI,MAAJ,CAAWS,IAAX,EAAiBR,IAAjB,CAAsB;AAC3BD,gBAAAA,MAAM,EAAE,SADmB;AAE3BQ,gBAAAA,IAAI,EAAE;AACJV,kBAAAA,KAAK,EAALA,KADI;AAEJU,kBAAAA,IAAI,EAAJA;AAFI;AAFqB,eAAtB,CAAP;AAOD,aAbG,CANU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATD,SAAS;AAAA;AAAA;AAAA,GAAf;;eAuBe;AAAEb,EAAAA,cAAc,EAAdA,cAAF;AAAkBa,EAAAA,SAAS,EAATA;AAAlB,C",
      "sourceRoot": "D:\\Property-Pro-Lite1\\server\\helpers",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\r\n\r\n/**\r\n * Authenticates a User.\r\n * @param {object} req the request object.\r\n * @param {object} res the response object.\r\n * @param {object} next calls the next middleware.\r\n * @return  {Function} next calls the next middleware\r\n *\r\n*/\r\n\r\nconst authMiddleware = async (req, res, next) => {\r\n  const token = req.header('x-auth-token');\r\n  if (!token) {\r\n    return res.status(401).send({\r\n      status: 'error',\r\n      error: 'No token, auth denied'\r\n    });\r\n  }\r\n  try {\r\n    const decoded = jwt.verify(token, 'jwtSecret');\r\n    req.user = decoded.user;\r\n    next();\r\n  } catch (err) {\r\n    return res.status(401).send({\r\n      status: 'error',\r\n      error: 'Invalid Token'\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Payload middleware/helper function.\r\n * @param {object} res the response object.\r\n * @param {object} data the payload parameter.\r\n *\r\n*/\r\n\r\nconst payloader = async (res, data, code) => {\r\n  const payload = {\r\n    user: {\r\n      id: data.id\r\n    }\r\n  };\r\n  await jwt.sign(\r\n    payload,\r\n    'jwtSecret',\r\n    { expiresIn: '7d' },\r\n    (err, token) => {\r\n      if (err) throw err;\r\n      return res.status(code).send({\r\n        status: 'success',\r\n        data: {\r\n          token,\r\n          data,\r\n        }\r\n      });\r\n    }\r\n  );\r\n};\r\n\r\nexport default { authMiddleware, payloader };\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562923604591
  }
}